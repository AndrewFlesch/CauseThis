[{"C:\\Users\\afles\\CauseThis\\client\\src\\index.js":"1","C:\\Users\\afles\\CauseThis\\client\\src\\App.js":"2","C:\\Users\\afles\\CauseThis\\client\\src\\auth\\Register.js":"3","C:\\Users\\afles\\CauseThis\\client\\src\\auth\\Login.js":"4","C:\\Users\\afles\\CauseThis\\client\\src\\components\\layout\\Navbar.js":"5","C:\\Users\\afles\\CauseThis\\client\\src\\components\\layout\\Landing.js":"6","C:\\Users\\afles\\CauseThis\\client\\src\\store.js":"7","C:\\Users\\afles\\CauseThis\\client\\src\\actions\\types.js":"8","C:\\Users\\afles\\CauseThis\\client\\src\\actions\\alert.js":"9","C:\\Users\\afles\\CauseThis\\client\\src\\components\\layout\\Alert.js":"10","C:\\Users\\afles\\CauseThis\\client\\src\\utils\\setAuthToken.js":"11","C:\\Users\\afles\\CauseThis\\client\\src\\actions\\auth.js":"12","C:\\Users\\afles\\CauseThis\\client\\src\\components\\routing\\PrivateRoute.js":"13","C:\\Users\\afles\\CauseThis\\client\\src\\actions\\profile.js":"14","C:\\Users\\afles\\CauseThis\\client\\src\\components\\dashboard\\Dashboard.js":"15","C:\\Users\\afles\\CauseThis\\client\\src\\components\\dashboard\\DashboardActions.js":"16","C:\\Users\\afles\\CauseThis\\client\\src\\utils\\formatDate.js":"17","C:\\Users\\afles\\CauseThis\\client\\src\\reducers\\index.js":"18","C:\\Users\\afles\\CauseThis\\client\\src\\reducers\\alert.js":"19","C:\\Users\\afles\\CauseThis\\client\\src\\reducers\\auth.js":"20","C:\\Users\\afles\\CauseThis\\client\\src\\reducers\\profile.js":"21","C:\\Users\\afles\\CauseThis\\client\\src\\components\\profileform\\CreateProfile.js":"22","C:\\Users\\afles\\CauseThis\\client\\src\\components\\profileform\\EditProfile.js":"23","C:\\Users\\afles\\CauseThis\\client\\src\\components\\layout\\spinner.js":"24","C:\\Users\\afles\\CauseThis\\client\\src\\components\\profile\\Profile.js":"25","C:\\Users\\afles\\CauseThis\\client\\src\\components\\profile\\ProfileTop.js":"26","C:\\Users\\afles\\CauseThis\\client\\src\\components\\profile\\ProfileAbout.js":"27","C:\\Users\\afles\\CauseThis\\client\\src\\components\\post\\PostForm.js":"28","C:\\Users\\afles\\CauseThis\\client\\src\\actions\\post.js":"29","C:\\Users\\afles\\CauseThis\\client\\src\\components\\post\\Feeling.js":"30","C:\\Users\\afles\\CauseThis\\client\\src\\components\\configform\\create.js":"31","C:\\Users\\afles\\CauseThis\\client\\src\\actions\\configform.js":"32","C:\\Users\\afles\\CauseThis\\client\\src\\reducers\\configform.js":"33","C:\\Users\\afles\\CauseThis\\client\\src\\components\\configform\\allitems.js":"34","C:\\Users\\afles\\CauseThis\\client\\src\\components\\configform\\button.js":"35","C:\\Users\\afles\\CauseThis\\client\\src\\components\\configform\\category.js":"36","C:\\Users\\afles\\CauseThis\\client\\src\\actions\\utils.js":"37","C:\\Users\\afles\\CauseThis\\client\\src\\reducers\\utils.js":"38"},{"size":197,"mtime":1608637419308,"results":"39","hashOfConfig":"40"},{"size":2090,"mtime":1615892188150,"results":"41","hashOfConfig":"40"},{"size":2666,"mtime":1608637419268,"results":"42","hashOfConfig":"40"},{"size":1824,"mtime":1608637419260,"results":"43","hashOfConfig":"40"},{"size":1403,"mtime":1613314288468,"results":"44","hashOfConfig":"40"},{"size":726,"mtime":1608637419276,"results":"45","hashOfConfig":"40"},{"size":393,"mtime":1608637419364,"results":"46","hashOfConfig":"40"},{"size":1595,"mtime":1622631630694,"results":"47","hashOfConfig":"40"},{"size":351,"mtime":1609797607574,"results":"48","hashOfConfig":"40"},{"size":495,"mtime":1608637419276,"results":"49","hashOfConfig":"40"},{"size":250,"mtime":1608637419372,"results":"50","hashOfConfig":"40"},{"size":2043,"mtime":1609797607601,"results":"51","hashOfConfig":"40"},{"size":583,"mtime":1608637419276,"results":"52","hashOfConfig":"40"},{"size":2405,"mtime":1613223341082,"results":"53","hashOfConfig":"40"},{"size":1614,"mtime":1609797931628,"results":"54","hashOfConfig":"40"},{"size":337,"mtime":1609797921617,"results":"55","hashOfConfig":"40"},{"size":122,"mtime":1609797723827,"results":"56","hashOfConfig":"40"},{"size":302,"mtime":1622718274365,"results":"57","hashOfConfig":"40"},{"size":393,"mtime":1609797757546,"results":"58","hashOfConfig":"40"},{"size":1094,"mtime":1609797757566,"results":"59","hashOfConfig":"40"},{"size":798,"mtime":1611922198527,"results":"60","hashOfConfig":"40"},{"size":28222,"mtime":1610546240073,"results":"61","hashOfConfig":"40"},{"size":30580,"mtime":1610546263590,"results":"62","hashOfConfig":"40"},{"size":275,"mtime":1609798218561,"results":"63","hashOfConfig":"40"},{"size":1281,"mtime":1613314063508,"results":"64","hashOfConfig":"40"},{"size":1905,"mtime":1613222860909,"results":"65","hashOfConfig":"40"},{"size":569,"mtime":1613239897311,"results":"66","hashOfConfig":"40"},{"size":15119,"mtime":1615980762744,"results":"67","hashOfConfig":"40"},{"size":3823,"mtime":1613324936770,"results":"68","hashOfConfig":"40"},{"size":2106,"mtime":1613326812997,"results":"69","hashOfConfig":"40"},{"size":5431,"mtime":1623326621302,"results":"70","hashOfConfig":"40"},{"size":4077,"mtime":1619610197147,"results":"71","hashOfConfig":"40"},{"size":1312,"mtime":1621790252075,"results":"72","hashOfConfig":"40"},{"size":4126,"mtime":1623277850813,"results":"73","hashOfConfig":"40"},{"size":16110,"mtime":1622155703063,"results":"74","hashOfConfig":"40"},{"size":445,"mtime":1623152678204,"results":"75","hashOfConfig":"40"},{"size":2420,"mtime":1623236513491,"results":"76","hashOfConfig":"40"},{"size":1196,"mtime":1623277597906,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"1gdouas",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"80"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"80"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"80"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"80"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"80"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"80"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"80"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"80"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"80"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"80"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"80"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"151"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"80"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"80"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"80"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"80"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"80"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"80"},"C:\\Users\\afles\\CauseThis\\client\\src\\index.js",[],["174","175"],"C:\\Users\\afles\\CauseThis\\client\\src\\App.js",[],"C:\\Users\\afles\\CauseThis\\client\\src\\auth\\Register.js",[],"C:\\Users\\afles\\CauseThis\\client\\src\\auth\\Login.js",[],"C:\\Users\\afles\\CauseThis\\client\\src\\components\\layout\\Navbar.js",["176"],"import React, { Fragment, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { logout } from '../../actions/auth';\r\nimport { getCurrentProfile } from '../../actions/profile';\r\n\r\nconst Navbar = ( { auth: { isAuthenticated, loading }, logout }) => {\r\n  const authLinks = (\r\n      <ul>\r\n      <li>\r\n      <Link to='/profile'>\r\n        Me\r\n      </Link>\r\n      </li>\r\n        <li>\r\n        <i className=\"fas fa-sign-out-alt\"></i>{' '}\r\n        <a onClick={logout} href=\"#!\">Logout</a></li>\r\n      </ul>\r\n  );\r\n\r\n  const guestLinks = (\r\n    <ul>\r\n      <li><a href=\"#!\">Developers</a></li>\r\n      <li><Link to=\"/register\">Register</Link></li>\r\n      <li><Link to=\"/login\">Login</Link></li>\r\n    </ul>\r\n);\r\n\r\n  return (\r\n    <nav className=\"navbar bg-dark\">\r\n      <h1>\r\n        <Link to=\"/\"><i className=\"fas fa-code\"></i> DevConnector\r\n        </Link>\r\n      </h1>\r\n      { !loading && (<Fragment> { isAuthenticated ? authLinks : guestLinks } </Fragment>)}\r\n    </nav>\r\n  )\r\n};\r\n\r\nNavbar.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  profile: state.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout, getCurrentProfile })(Navbar);\r\n","C:\\Users\\afles\\CauseThis\\client\\src\\components\\layout\\Landing.js",[],"C:\\Users\\afles\\CauseThis\\client\\src\\store.js",[],"C:\\Users\\afles\\CauseThis\\client\\src\\actions\\types.js",[],"C:\\Users\\afles\\CauseThis\\client\\src\\actions\\alert.js",[],"C:\\Users\\afles\\CauseThis\\client\\src\\components\\layout\\Alert.js",[],"C:\\Users\\afles\\CauseThis\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\afles\\CauseThis\\client\\src\\actions\\auth.js",[],"C:\\Users\\afles\\CauseThis\\client\\src\\components\\routing\\PrivateRoute.js",[],"C:\\Users\\afles\\CauseThis\\client\\src\\actions\\profile.js",["177","178"],"import axios from 'axios';\r\nimport { setAlert } from './alert';\r\n\r\nimport {\r\n  GET_PROFILE,\r\n  PROFILE_ERROR,\r\n  UPDATE_PROFILE,\r\n  CLEAR_PROFILE,\r\n  ACCOUNT_DELETED\r\n} from './types';\r\n\r\n//Get current user PROFILE_ERROR\r\nexport const getCurrentProfile = () => async dispatch => {\r\n  try {\r\n    const res = await axios.get('/api/profile/me');\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Get profiles by ID\r\nexport const getProfileById = userId => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/profile/user/${userId}`);\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Create or update a profile\r\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\r\n  try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      }\r\n      const res = await axios.post('/api/profile', formData, config);\r\n      dispatch({\r\n        type: GET_PROFILE,\r\n        payload: res.data\r\n      });\r\n\r\n      dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\r\n\r\n      if(!edit) {\r\n        history.push('/dashboard');\r\n      }\r\n  } catch (err){\r\n    const errors = err.response.data.errors;\r\n\r\n    if(errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n//Delete account & profile\r\n\r\nexport const deleteAccount = () => async dispatch => {\r\n  if(window.confirm('Are you sure? This can NOT be undone!')) {\r\n    try {\r\n      const res = await axios.delete('api/profile/');\r\n\r\n      dispatch({\r\n        type: CLEAR_PROFILE,\r\n      });\r\n      dispatch({\r\n        type: ACCOUNT_DELETED,\r\n      });\r\n      dispatch(setAlert('Account permanitly Deleted'));\r\n    } catch (err) {\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status }\r\n      });\r\n    }\r\n  }\r\n\r\n};\r\n","C:\\Users\\afles\\CauseThis\\client\\src\\components\\dashboard\\Dashboard.js",["179"],"import React, { Fragment, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getCurrentProfile, deleteAccount } from '../../actions/profile';\r\nimport Spinner from '../layout/spinner';\r\nimport DashboardActions from './DashboardActions';\r\n\r\nconst Dashboard = ({getCurrentProfile, deleteAccount, auth: { user }, profile: { profile, loading } }) => {\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n  }, []);\r\n  return loading && profile === null ? (<Spinner /> ) : (<Fragment>\r\n  <h1 className=\"large text-primary\">Dashboard</h1>\r\n  <p className=\"lead\">\r\n  <i className=\"fas fa-user\"></i> Welcome { user && user.name }</p>\r\n  { profile !== null ? (<Fragment><DashboardActions />\r\n      <div className=\"my-2\">\r\n        <button className=\"btn btn-danger\" onClick={() => deleteAccount()}>\r\n        <i className=\"fas fa-user-minus\"> </i> Delete My Account\r\n        </button>\r\n      </div>\r\n\r\n    </Fragment> ): (<Fragment>\r\n    <p>You have not yet setup a profile, please add some info</p>\r\n    <Link to='/create-profile' className='btn btn-primary my-1'>\r\n    Create Profile\r\n    </Link>\r\n    </Fragment>)}\r\n  </Fragment> )\r\n};\r\n\r\nDashboard.propTypes = {\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  deleteAccount: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  profile: state.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(Dashboard);\r\n","C:\\Users\\afles\\CauseThis\\client\\src\\components\\dashboard\\DashboardActions.js",[],"C:\\Users\\afles\\CauseThis\\client\\src\\utils\\formatDate.js",[],"C:\\Users\\afles\\CauseThis\\client\\src\\reducers\\index.js",[],"C:\\Users\\afles\\CauseThis\\client\\src\\reducers\\alert.js",["180","181"],"import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\nexport default function(state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch(action, type) {\r\n    case SET_ALERT:\r\n      return [...state, payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter(alert => alert.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\afles\\CauseThis\\client\\src\\reducers\\auth.js",["182"],"import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem('token'),\r\n  isAuthenticated: null,\r\n  loading: true,\r\n  user: null\r\n}\r\n\r\nexport default function( state = initialState, action) {\r\nconst { type, payload } = action;\r\n  switch(type) {\r\n    case USER_LOADED:\r\n    return {\r\n      ...state,\r\n      isAuthenticated: true,\r\n      loading: false,\r\n      user: payload\r\n    }\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem('token', payload.token);\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        isAuthenticated: true,\r\n        loading: false\r\n      }\r\n    case REGISTER_FAIL:\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT:\r\n      localStorage.removeItem('token');\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","C:\\Users\\afles\\CauseThis\\client\\src\\reducers\\profile.js",["183"],"import {\r\n  GET_PROFILE,\r\n  PROFILE_ERROR,\r\n  CLEAR_PROFILE,\r\n  UPDATE_PROFILE\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  profile: null,\r\n  profiles: [],\r\n  repos: [],\r\n  loading: true,\r\n  error: {}\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch(type) {\r\n    case GET_PROFILE:\r\n    case UPDATE_PROFILE:\r\n      return{\r\n        ...state,\r\n        profile: payload,\r\n        loading: false\r\n      };\r\n    case PROFILE_ERROR:\r\n      return{\r\n        ...state,\r\n        error: payload,\r\n        loading:false,\r\n        profile: null\r\n      };\r\n    case CLEAR_PROFILE:\r\n      return{\r\n        ...state,\r\n        profile: null,\r\n        repos: [],\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\afles\\CauseThis\\client\\src\\components\\profileform\\CreateProfile.js",["184"],"import React, { Fragment, useState } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createProfile } from '../../actions/profile'\r\n\r\nconst CreateProfile = ({ createProfile, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    birth: '',\r\n    country: '',\r\n    zip: '',\r\n    city: '',\r\n    gender: '',\r\n    height: '',\r\n    weight: '',\r\n    ethnethnicityandrace: '',\r\n    industry: '',\r\n    area: '',\r\n    jobtitle: ''\r\n  });\r\n\r\n\r\n  const {\r\n    birth,\r\n    country,\r\n    zip,\r\n    city,\r\n    gender,\r\n    height,\r\n    weight,\r\n    ethnicityandrace,\r\n    industry,\r\n    area,\r\n    jobtitle\r\n  } = formData;\r\n\r\nconst onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value});\r\n\r\nconst onSelectChange = () => {\r\n  let select = document.getElementById('ethnicityandrace')\r\n  let ethnic = [...select.options].filter(option => option.selected).map(option => option.value);\r\n  setFormData({...formData, ethnicityandrace: ethnic});\r\n}\r\n\r\nconst isUnitedStates = (country) => {\r\n  let whatCountry = country;\r\n  console.log(whatCountry);\r\n  if (whatCountry === 'United States of America') {\r\n    document.getElementById(\"zip\").style.display = 'block';\r\n    document.getElementById(\"city\").style.display = 'none';\r\n\r\n  } else {\r\n    console.log('Not US ' + whatCountry);\r\n    document.getElementById(\"zip\").style.display = 'none';\r\n    document.getElementById(\"city\").style.display = 'block';\r\n  }\r\n  setFormData({ ...formData, country: whatCountry });\r\n}\r\n\r\nconst htChange = () => {\r\n  let htft = document.querySelector(\"[name='htft']\").value * 12;\r\n  let htftInt = htft ? parseInt(htft) : 0;\r\n  let htin=document.querySelector(\"[name='htin']\").value;\r\n  let htinInt = htin ? parseInt(htin) : 0;\r\n  let htToInches = htftInt + htinInt;\r\n  setFormData({...formData, height: htToInches});\r\n}\r\n\r\n const onSubmit = e => {\r\n   e.preventDefault();\r\n   console.log(formData);\r\n   createProfile(formData, history);\r\n };\r\n\r\n  return (\r\n    <Fragment>\r\n    <div>\r\n    <h1 className=\"large text-primary\">\r\n      Create Your Profile\r\n    </h1>\r\n    <p className=\"lead\">\r\n      <i className=\"fas fa-user\"></i>Add some additional information about yourself.\r\n    </p>\r\n    <small>* = required field</small>\r\n    <form className='form' onSubmit={e => onSubmit(e)}>\r\n    <div className=\"form-group\">\r\n      <h4>Birth Date</h4>\r\n      <input type=\"text\" className=\"number\" name=\"birth\" value={birth} onChange={e => onChange(e)} />\r\n      <small className=\"form-text\"\r\n        ></small\r\n      >\r\n    </div>\r\n    <div className=\"form-group\">\r\n    <h4>Country</h4>\r\n      <select className=\"form-control dropdown\" id=\"country\" name=\"country\" value={country} onChange={e => isUnitedStates(e.target.value)}>\r\n<option value=\"\">--- Choose One ---</option>\r\n<option value=\"United States of America\">United States of America</option>\r\n<option value=\"Afganistan\">Afghanistan</option>\r\n<option value=\"Albania\">Albania</option>\r\n<option value=\"Algeria\">Algeria</option>\r\n<option value=\"American Samoa\">American Samoa</option>\r\n<option value=\"Andorra\">Andorra</option>\r\n<option value=\"Angola\">Angola</option>\r\n<option value=\"Anguilla\">Anguilla</option>\r\n<option value=\"Antigua & Barbuda\">Antigua & Barbuda</option>\r\n<option value=\"Argentina\">Argentina</option>\r\n<option value=\"Armenia\">Armenia</option>\r\n<option value=\"Aruba\">Aruba</option>\r\n<option value=\"Australia\">Australia</option>\r\n<option value=\"Austria\">Austria</option>\r\n<option value=\"Azerbaijan\">Azerbaijan</option>\r\n<option value=\"Bahamas\">Bahamas</option>\r\n<option value=\"Bahrain\">Bahrain</option>\r\n<option value=\"Bangladesh\">Bangladesh</option>\r\n<option value=\"Barbados\">Barbados</option>\r\n<option value=\"Belarus\">Belarus</option>\r\n<option value=\"Belgium\">Belgium</option>\r\n<option value=\"Belize\">Belize</option>\r\n<option value=\"Benin\">Benin</option>\r\n<option value=\"Bermuda\">Bermuda</option>\r\n<option value=\"Bhutan\">Bhutan</option>\r\n<option value=\"Bolivia\">Bolivia</option>\r\n<option value=\"Bonaire\">Bonaire</option>\r\n<option value=\"Bosnia & Herzegovina\">Bosnia & Herzegovina</option>\r\n<option value=\"Botswana\">Botswana</option>\r\n<option value=\"Brazil\">Brazil</option>\r\n<option value=\"British Indian Ocean Ter\">British Indian Ocean Ter</option>\r\n<option value=\"Brunei\">Brunei</option>\r\n<option value=\"Bulgaria\">Bulgaria</option>\r\n<option value=\"Burkina Faso\">Burkina Faso</option>\r\n<option value=\"Burundi\">Burundi</option>\r\n<option value=\"Cambodia\">Cambodia</option>\r\n<option value=\"Cameroon\">Cameroon</option>\r\n<option value=\"Canada\">Canada</option>\r\n<option value=\"Canary Islands\">Canary Islands</option>\r\n<option value=\"Cape Verde\">Cape Verde</option>\r\n<option value=\"Cayman Islands\">Cayman Islands</option>\r\n<option value=\"Central African Republic\">Central African Republic</option>\r\n<option value=\"Chad\">Chad</option>\r\n<option value=\"Channel Islands\">Channel Islands</option>\r\n<option value=\"Chile\">Chile</option>\r\n<option value=\"China\">China</option>\r\n<option value=\"Christmas Island\">Christmas Island</option>\r\n<option value=\"Cocos Island\">Cocos Island</option>\r\n<option value=\"Colombia\">Colombia</option>\r\n<option value=\"Comoros\">Comoros</option>\r\n<option value=\"Congo\">Congo</option>\r\n<option value=\"Cook Islands\">Cook Islands</option>\r\n<option value=\"Costa Rica\">Costa Rica</option>\r\n<option value=\"Cote DIvoire\">Cote DIvoire</option>\r\n<option value=\"Croatia\">Croatia</option>\r\n<option value=\"Cuba\">Cuba</option>\r\n<option value=\"Curaco\">Curacao</option>\r\n<option value=\"Cyprus\">Cyprus</option>\r\n<option value=\"Czech Republic\">Czech Republic</option>\r\n<option value=\"Denmark\">Denmark</option>\r\n<option value=\"Djibouti\">Djibouti</option>\r\n<option value=\"Dominica\">Dominica</option>\r\n<option value=\"Dominican Republic\">Dominican Republic</option>\r\n<option value=\"East Timor\">East Timor</option>\r\n<option value=\"Ecuador\">Ecuador</option>\r\n<option value=\"Egypt\">Egypt</option>\r\n<option value=\"El Salvador\">El Salvador</option>\r\n<option value=\"Equatorial Guinea\">Equatorial Guinea</option>\r\n<option value=\"Eritrea\">Eritrea</option>\r\n<option value=\"Estonia\">Estonia</option>\r\n<option value=\"Ethiopia\">Ethiopia</option>\r\n<option value=\"Falkland Islands\">Falkland Islands</option>\r\n<option value=\"Faroe Islands\">Faroe Islands</option>\r\n<option value=\"Fiji\">Fiji</option>\r\n<option value=\"Finland\">Finland</option>\r\n<option value=\"France\">France</option>\r\n<option value=\"French Guiana\">French Guiana</option>\r\n<option value=\"French Polynesia\">French Polynesia</option>\r\n<option value=\"French Southern Ter\">French Southern Ter</option>\r\n<option value=\"Gabon\">Gabon</option>\r\n<option value=\"Gambia\">Gambia</option>\r\n<option value=\"Georgia\">Georgia</option>\r\n<option value=\"Germany\">Germany</option>\r\n<option value=\"Ghana\">Ghana</option>\r\n<option value=\"Gibraltar\">Gibraltar</option>\r\n<option value=\"Great Britain\">Great Britain</option>\r\n<option value=\"Greece\">Greece</option>\r\n<option value=\"Greenland\">Greenland</option>\r\n<option value=\"Grenada\">Grenada</option>\r\n<option value=\"Guadeloupe\">Guadeloupe</option>\r\n<option value=\"Guam\">Guam</option>\r\n<option value=\"Guatemala\">Guatemala</option>\r\n<option value=\"Guinea\">Guinea</option>\r\n<option value=\"Guyana\">Guyana</option>\r\n<option value=\"Haiti\">Haiti</option>\r\n<option value=\"Hawaii\">Hawaii</option>\r\n<option value=\"Honduras\">Honduras</option>\r\n<option value=\"Hong Kong\">Hong Kong</option>\r\n<option value=\"Hungary\">Hungary</option>\r\n<option value=\"Iceland\">Iceland</option>\r\n<option value=\"Indonesia\">Indonesia</option>\r\n<option value=\"India\">India</option>\r\n<option value=\"Iran\">Iran</option>\r\n<option value=\"Iraq\">Iraq</option>\r\n<option value=\"Ireland\">Ireland</option>\r\n<option value=\"Isle of Man\">Isle of Man</option>\r\n<option value=\"Israel\">Israel</option>\r\n<option value=\"Italy\">Italy</option>\r\n<option value=\"Jamaica\">Jamaica</option>\r\n<option value=\"Japan\">Japan</option>\r\n<option value=\"Jordan\">Jordan</option>\r\n<option value=\"Kazakhstan\">Kazakhstan</option>\r\n<option value=\"Kenya\">Kenya</option>\r\n<option value=\"Kiribati\">Kiribati</option>\r\n<option value=\"Korea North\">Korea North</option>\r\n<option value=\"Korea Sout\">Korea South</option>\r\n<option value=\"Kuwait\">Kuwait</option>\r\n<option value=\"Kyrgyzstan\">Kyrgyzstan</option>\r\n<option value=\"Laos\">Laos</option>\r\n<option value=\"Latvia\">Latvia</option>\r\n<option value=\"Lebanon\">Lebanon</option>\r\n<option value=\"Lesotho\">Lesotho</option>\r\n<option value=\"Liberia\">Liberia</option>\r\n<option value=\"Libya\">Libya</option>\r\n<option value=\"Liechtenstein\">Liechtenstein</option>\r\n<option value=\"Lithuania\">Lithuania</option>\r\n<option value=\"Luxembourg\">Luxembourg</option>\r\n<option value=\"Macau\">Macau</option>\r\n<option value=\"Macedonia\">Macedonia</option>\r\n<option value=\"Madagascar\">Madagascar</option>\r\n<option value=\"Malaysia\">Malaysia</option>\r\n<option value=\"Malawi\">Malawi</option>\r\n<option value=\"Maldives\">Maldives</option>\r\n<option value=\"Mali\">Mali</option>\r\n<option value=\"Malta\">Malta</option>\r\n<option value=\"Marshall Islands\">Marshall Islands</option>\r\n<option value=\"Martinique\">Martinique</option>\r\n<option value=\"Mauritania\">Mauritania</option>\r\n<option value=\"Mauritius\">Mauritius</option>\r\n<option value=\"Mayotte\">Mayotte</option>\r\n<option value=\"Mexico\">Mexico</option>\r\n<option value=\"Midway Islands\">Midway Islands</option>\r\n<option value=\"Moldova\">Moldova</option>\r\n<option value=\"Monaco\">Monaco</option>\r\n<option value=\"Mongolia\">Mongolia</option>\r\n<option value=\"Montserrat\">Montserrat</option>\r\n<option value=\"Morocco\">Morocco</option>\r\n<option value=\"Mozambique\">Mozambique</option>\r\n<option value=\"Myanmar\">Myanmar</option>\r\n<option value=\"Nambia\">Nambia</option>\r\n<option value=\"Nauru\">Nauru</option>\r\n<option value=\"Nepal\">Nepal</option>\r\n<option value=\"Netherland Antilles\">Netherland Antilles</option>\r\n<option value=\"Netherlands\">Netherlands (Holland, Europe)</option>\r\n<option value=\"Nevis\">Nevis</option>\r\n<option value=\"New Caledonia\">New Caledonia</option>\r\n<option value=\"New Zealand\">New Zealand</option>\r\n<option value=\"Nicaragua\">Nicaragua</option>\r\n<option value=\"Niger\">Niger</option>\r\n<option value=\"Nigeria\">Nigeria</option>\r\n<option value=\"Niue\">Niue</option>\r\n<option value=\"Norfolk Island\">Norfolk Island</option>\r\n<option value=\"Norway\">Norway</option>\r\n<option value=\"Oman\">Oman</option>\r\n<option value=\"Pakistan\">Pakistan</option>\r\n<option value=\"Palau Island\">Palau Island</option>\r\n<option value=\"Palestine\">Palestine</option>\r\n<option value=\"Panama\">Panama</option>\r\n<option value=\"Papua New Guinea\">Papua New Guinea</option>\r\n<option value=\"Paraguay\">Paraguay</option>\r\n<option value=\"Peru\">Peru</option>\r\n<option value=\"Phillipines\">Philippines</option>\r\n<option value=\"Pitcairn Island\">Pitcairn Island</option>\r\n<option value=\"Poland\">Poland</option>\r\n<option value=\"Portugal\">Portugal</option>\r\n<option value=\"Puerto Rico\">Puerto Rico</option>\r\n<option value=\"Qatar\">Qatar</option>\r\n<option value=\"Republic of Montenegro\">Republic of Montenegro</option>\r\n<option value=\"Republic of Serbia\">Republic of Serbia</option>\r\n<option value=\"Reunion\">Reunion</option>\r\n<option value=\"Romania\">Romania</option>\r\n<option value=\"Russia\">Russia</option>\r\n<option value=\"Rwanda\">Rwanda</option>\r\n<option value=\"St Barthelemy\">St Barthelemy</option>\r\n<option value=\"St Eustatius\">St Eustatius</option>\r\n<option value=\"St Helena\">St Helena</option>\r\n<option value=\"St Kitts-Nevis\">St Kitts-Nevis</option>\r\n<option value=\"St Lucia\">St Lucia</option>\r\n<option value=\"St Maarten\">St Maarten</option>\r\n<option value=\"St Pierre & Miquelon\">St Pierre & Miquelon</option>\r\n<option value=\"St Vincent & Grenadines\">St Vincent & Grenadines</option>\r\n<option value=\"Saipan\">Saipan</option>\r\n<option value=\"Samoa\">Samoa</option>\r\n<option value=\"Samoa American\">Samoa American</option>\r\n<option value=\"San Marino\">San Marino</option>\r\n<option value=\"Sao Tome & Principe\">Sao Tome & Principe</option>\r\n<option value=\"Saudi Arabia\">Saudi Arabia</option>\r\n<option value=\"Senegal\">Senegal</option>\r\n<option value=\"Seychelles\">Seychelles</option>\r\n<option value=\"Sierra Leone\">Sierra Leone</option>\r\n<option value=\"Singapore\">Singapore</option>\r\n<option value=\"Slovakia\">Slovakia</option>\r\n<option value=\"Slovenia\">Slovenia</option>\r\n<option value=\"Solomon Islands\">Solomon Islands</option>\r\n<option value=\"Somalia\">Somalia</option>\r\n<option value=\"South Africa\">South Africa</option>\r\n<option value=\"Spain\">Spain</option>\r\n<option value=\"Sri Lanka\">Sri Lanka</option>\r\n<option value=\"Sudan\">Sudan</option>\r\n<option value=\"Suriname\">Suriname</option>\r\n<option value=\"Swaziland\">Swaziland</option>\r\n<option value=\"Sweden\">Sweden</option>\r\n<option value=\"Switzerland\">Switzerland</option>\r\n<option value=\"Syria\">Syria</option>\r\n<option value=\"Tahiti\">Tahiti</option>\r\n<option value=\"Taiwan\">Taiwan</option>\r\n<option value=\"Tajikistan\">Tajikistan</option>\r\n<option value=\"Tanzania\">Tanzania</option>\r\n<option value=\"Thailand\">Thailand</option>\r\n<option value=\"Togo\">Togo</option>\r\n<option value=\"Tokelau\">Tokelau</option>\r\n<option value=\"Tonga\">Tonga</option>\r\n<option value=\"Trinidad & Tobago\">Trinidad & Tobago</option>\r\n<option value=\"Tunisia\">Tunisia</option>\r\n<option value=\"Turkey\">Turkey</option>\r\n<option value=\"Turkmenistan\">Turkmenistan</option>\r\n<option value=\"Turks & Caicos Is\">Turks & Caicos Is</option>\r\n<option value=\"Tuvalu\">Tuvalu</option>\r\n<option value=\"Uganda\">Uganda</option>\r\n<option value=\"United Kingdom\">United Kingdom</option>\r\n<option value=\"Ukraine\">Ukraine</option>\r\n<option value=\"United Arab Erimates\">United Arab Emirates</option>\r\n<option value=\"United States of America\">United States of America</option>\r\n<option value=\"Uraguay\">Uruguay</option>\r\n<option value=\"Uzbekistan\">Uzbekistan</option>\r\n<option value=\"Vanuatu\">Vanuatu</option>\r\n<option value=\"Vatican City State\">Vatican City State</option>\r\n<option value=\"Venezuela\">Venezuela</option>\r\n<option value=\"Vietnam\">Vietnam</option>\r\n<option value=\"Virgin Islands (Brit)\">Virgin Islands (Brit)</option>\r\n<option value=\"Virgin Islands (USA)\">Virgin Islands (USA)</option>\r\n<option value=\"Wake Island\">Wake Island</option>\r\n<option value=\"Wallis & Futana Is\">Wallis & Futana Is</option>\r\n<option value=\"Yemen\">Yemen</option>\r\n<option value=\"Zaire\">Zaire</option>\r\n<option value=\"Zambia\">Zambia</option>\r\n<option value=\"Zimbabwe\">Zimbabwe</option>\r\n      </select>\r\n    </div>\r\n    <div id=\"zip\" className=\"form-group\">\r\n          <h4>Zip Code</h4>\r\n      <input type=\"number\" className=\"number\" placeholder=\"zip\" name=\"zip\" value={zip} onChange={e => onChange(e)} />\r\n    </div>\r\n    <div id=\"city\" className=\"form-group\">\r\n          <h4>City/Town/Village</h4>\r\n      <input type=\"text\" placeholder=\"\" name=\"city\" value={city} onChange={e => onChange(e)} />\r\n    </div>\r\n    <div className=\"form-group\">\r\n          <h4>Gender</h4>\r\n          <select className=\"form-control dropdown\" id=\"gender\" name=\"gender\" value={gender} onChange={e => onChange(e)}>\r\n          <option value=\"\"> --- Choose One --- </option>\r\n          <option value=\"Male\">Male</option>\r\n          <option value=\"Female\">Female</option>\r\n          <option value=\"Other\">Other</option>\r\n          </select>\r\n    </div>\r\n\r\n\r\n    <div className=\"form-group\">\r\n              <h4>Height</h4>\r\n          <div className=\"inline\"><input type=\"number\" min=\"1\" max=\"8\" className=\"\" placeholder=\"0\" name=\"htft\" onChange={e => htChange(e)} /> Feet </div>\r\n          <div className=\"inline\"><input type=\"number\" min=\"0\" max=\"12\" className=\"\" placeholder=\"0\" name=\"htin\" onChange={e => htChange(e)} /> Inches </div>\r\n        </div>\r\n\r\n    <div className=\"form-group\">\r\n          <h4>Weight (lbs)</h4>\r\n      <input type=\"number\" placeholder=\"\" className=\"number\" name=\"weight\" min=\"0\" value={weight} onChange={e => onChange(e)} />\r\n    </div>\r\n\r\n    <div className=\"form-group\">\r\n      <h4>Ethnicity & Race</h4>\r\n      <select multiple size=\"6\" className=\"form-control dropdown\" id=\"ethnicityandrace\" name=\"ethnicityandrace\" value={ethnicityandrace} onChange={e => onSelectChange(e)}>\r\n<option value=\"American Indian or Alaska Native\">American Indian or Alaska Native</option>\r\n<option value=\"Asian\">Asian</option>\r\n<option value=\"Black or African American\">Black or African American</option>\r\n<option value=\"Hispanic or Latino\">Hispanic or Latino</option>\r\n<option value=\"Native Hawaiian or Other Pacific Islander\">Native Hawaiian or Other Pacific Islander</option>\r\n<option value=\"White\">White</option>\r\n</select>\r\n    </div>\r\n\r\n      <div className=\"form-group\">\r\n        <h4>Industry</h4>\r\n          <select className=\"form-control dropdown\" id=\"industry\" name=\"industry\" value={industry} onChange={e => onChange(e)}>\r\n        <option value=\"Choose\"> --- Choose One --- </option>\r\n      <option value=\"Accounting\">Accounting</option>\r\n      <option value=\"Airlines/Aviation\">Airlines/Aviation</option>\r\n      <option value=\"Alternative Dispute Resolution\">Alternative Dispute Resolution</option>\r\n      <option value=\"Alternative Medicine\">Alternative Medicine</option>\r\n      <option value=\"Animation\">Animation</option>\r\n      <option value=\"Apparel/Fashion\">Apparel/Fashion</option>\r\n      <option value=\"Architecture/Planning\">Architecture/Planning</option>\r\n      <option value=\"Arts/Crafts\">Arts/Crafts</option>\r\n      <option value=\"Automotive\">Automotive</option>\r\n      <option value=\"Aviation/Aerospace\">Aviation/Aerospace</option>\r\n      <option value=\"Banking/Mortgage\">Banking/Mortgage</option>\r\n      <option value=\"Biotechnology/Greentech\">Biotechnology/Greentech</option>\r\n      <option value=\"Broadcast Media\">Broadcast Media</option>\r\n      <option value=\"Building Materials\">Building Materials</option>\r\n      <option value=\"Business Supplies/Equipment\">Business Supplies/Equipment</option>\r\n      <option value=\"Capital Markets/Hedge Fund/Private Equity\">Capital Markets/Hedge Fund/Private Equity</option>\r\n      <option value=\"Chemicals\">Chemicals</option>\r\n      <option value=\"Civic/Social Organization\">Civic/Social Organization</option>\r\n      <option value=\"Civil Engineering\">Civil Engineering</option>\r\n      <option value=\"Commercial Real Estate\">Commercial Real Estate</option>\r\n      <option value=\"Computer Games\">Computer Games</option>\r\n      <option value=\"Computer Hardware\">Computer Hardware</option>\r\n      <option value=\"Computer Networking\">Computer Networking</option>\r\n      <option value=\"Computer Software/Engineering\">Computer Software/Engineering</option>\r\n      <option value=\"Computer/Network Security\">Computer/Network Security</option>\r\n      <option value=\"Construction\">Construction</option>\r\n      <option value=\"Consumer Electronics\">Consumer Electronics</option>\r\n      <option value=\"Consumer Goods\">Consumer Goods</option>\r\n      <option value=\"Consumer Services\">Consumer Services</option>\r\n      <option value=\"Cosmetics\">Cosmetics</option>\r\n      <option value=\"Dairy\">Dairy</option>\r\n      <option value=\"Defense/Space\">Defense/Space</option>\r\n      <option value=\"Design\">Design</option>\r\n      <option value=\"E-Learning\">E-Learning</option>\r\n      <option value=\"Education Management\">Education Management</option>\r\n      <option value=\"Electrical/Electronic Manufacturing\">Electrical/Electronic Manufacturing</option>\r\n      <option value=\"Entertainment/Movie Production\">Entertainment/Movie Production</option>\r\n      <option value=\"Environmental Services\">Environmental Services</option>\r\n      <option value=\"Events Services\">Events Services</option>\r\n      <option value=\"Executive Office\">Executive Office</option>\r\n      <option value=\"Facilities Services\">Facilities Services</option>\r\n      <option value=\"Farming\">Farming</option>\r\n      <option value=\"Financial Services\">Financial Services</option>\r\n      <option value=\"Fine Art\">Fine Art</option>\r\n      <option value=\"Fishery\">Fishery</option>\r\n      <option value=\"Food Production\">Food Production</option>\r\n      <option value=\"Food/Beverages\">Food/Beverages</option>\r\n      <option value=\"Fundraising\">Fundraising</option>\r\n      <option value=\"Furniture\">Furniture</option>\r\n      <option value=\"Gambling/Casinos\">Gambling/Casinos</option>\r\n      <option value=\"Glass/Ceramics/Concrete\">Glass/Ceramics/Concrete</option>\r\n      <option value=\"Government Administration\">Government Administration</option>\r\n      <option value=\"Government Relations\">Government Relations</option>\r\n      <option value=\"Graphic Design/Web Design\">Graphic Design/Web Design</option>\r\n      <option value=\"Health/Fitness\">Health/Fitness</option>\r\n      <option value=\"Higher Education/Acadamia\">Higher Education/Acadamia</option>\r\n      <option value=\"Hospital/Health Care\">Hospital/Health Care</option>\r\n      <option value=\"Hospitality\">Hospitality</option>\r\n      <option value=\"Human Resources/HR\">Human Resources/HR</option>\r\n      <option value=\"Import/Export\">Import/Export</option>\r\n      <option value=\"Individual/Family Services\">Individual/Family Services</option>\r\n      <option value=\"Industrial Automation\">Industrial Automation</option>\r\n      <option value=\"Information Services\">Information Services</option>\r\n      <option value=\"Information Technology/IT\">Information Technology/IT</option>\r\n      <option value=\"Insurance\">Insurance</option>\r\n      <option value=\"International Affairs\">International Affairs</option>\r\n      <option value=\"International Trade/Development\">International Trade/Development</option>\r\n      <option value=\"Internet\">Internet</option>\r\n      <option value=\"Investment Banking/Venture\">Investment Banking/Venture</option>\r\n      <option value=\"Investment Management/Hedge Fund/Private Equity\">Investment Management/Hedge Fund/Private Equity</option>\r\n      <option value=\"Judiciary\">Judiciary</option>\r\n      <option value=\"Law Enforcement\">Law Enforcement</option>\r\n      <option value=\"Law Practice/Law Firms\">Law Practice/Law Firms</option>\r\n      <option value=\"Legal Services\">Legal Services</option>\r\n      <option value=\"Legislative Office\">Legislative Office</option>\r\n      <option value=\"Leisure/Travel\">Leisure/Travel</option>\r\n      <option value=\"Library\">Library</option>\r\n      <option value=\"Logistics/Procurement\">Logistics/Procurement</option>\r\n      <option value=\"Luxury Goods/Jewelry\">Luxury Goods/Jewelry</option>\r\n      <option value=\"Machinery\">Machinery</option>\r\n      <option value=\"Management Consulting\">Management Consulting</option>\r\n      <option value=\"Maritime\">Maritime</option>\r\n      <option value=\"Market Research\">Market Research</option>\r\n      <option value=\"Marketing/Advertising/Sales\">Marketing/Advertising/Sales</option>\r\n      <option value=\"Mechanical or Industrial Engineering\">Mechanical or Industrial Engineering</option>\r\n      <option value=\"Media Production\">Media Production</option>\r\n      <option value=\"Medical Equipment\">Medical Equipment</option>\r\n      <option value=\"Medical Practice\">Medical Practice</option>\r\n      <option value=\"Mental Health Care\">Mental Health Care</option>\r\n      <option value=\"Military Industry\">Military Industry</option>\r\n      <option value=\"Mining/Metals\">Mining/Metals</option>\r\n      <option value=\"Motion Pictures/Film\">Motion Pictures/Film</option>\r\n      <option value=\"Museums/Institutions\">Museums/Institutions</option>\r\n      <option value=\"Music\">Music</option>\r\n      <option value=\"Nanotechnology\">Nanotechnology</option>\r\n      <option value=\"Newspapers/Journalism\">Newspapers/Journalism</option>\r\n      <option value=\"Non-Profit/Volunteering\">Non-Profit/Volunteering</option>\r\n      <option value=\"Oil/Energy/Solar/Greentech\">Oil/Energy/Solar/Greentech</option>\r\n      <option value=\"Online Publishing\">Online Publishing</option>\r\n      <option value=\"Other Industry\">Other Industry</option>\r\n      <option value=\"Outsourcing/Offshoring\">Outsourcing/Offshoring</option>\r\n      <option value=\"Package/Freight Delivery\">Package/Freight Delivery</option>\r\n      <option value=\"Packaging/Containers\">Packaging/Containers</option>\r\n      <option value=\"Paper/Forest Products\">Paper/Forest Products</option>\r\n      <option value=\"Performing Arts\">Performing Arts</option>\r\n      <option value=\"Pharmaceuticals\">Pharmaceuticals</option>\r\n      <option value=\"Philanthropy\">Philanthropy</option>\r\n      <option value=\"Photography\">Photography</option>\r\n      <option value=\"Plastics\">Plastics</option>\r\n      <option value=\"Political Organization\">Political Organization</option>\r\n      <option value=\"Primary/Secondary Education\">Primary/Secondary Education</option>\r\n      <option value=\"Printing\">Printing</option>\r\n      <option value=\"Professional Training\">Professional Training</option>\r\n      <option value=\"Program Development\">Program Development</option>\r\n      <option value=\"Public Relations/PR\">Public Relations/PR</option>\r\n      <option value=\"Public Safety\">Public Safety</option>\r\n      <option value=\"Publishing Industry\">Publishing Industry</option>\r\n      <option value=\"Railroad Manufacture\">Railroad Manufacture</option>\r\n      <option value=\"Ranching\">Ranching</option>\r\n      <option value=\"Real Estate/Mortgage\">Real Estate/Mortgage</option>\r\n      <option value=\"Recreational Facilities/Services\">Recreational Facilities/Services</option>\r\n      <option value=\"Religious Institutions\">Religious Institutions</option>\r\n      <option value=\"Renewables/Environment\">Renewables/Environment</option>\r\n      <option value=\"Research Industry\">Research Industry</option>\r\n      <option value=\"Restaurants\">Restaurants</option>\r\n      <option value=\"Retail Industry\">Retail Industry</option>\r\n      <option value=\"Security/Investigations\">Security/Investigations</option>\r\n      <option value=\"Semiconductors\">Semiconductors</option>\r\n      <option value=\"Shipbuilding\">Shipbuilding</option>\r\n      <option value=\"Sporting Goods\">Sporting Goods</option>\r\n      <option value=\"Sports\">Sports</option>\r\n      <option value=\"Staffing/Recruiting\">Staffing/Recruiting</option>\r\n      <option value=\"Supermarkets\">Supermarkets</option>\r\n      <option value=\"Telecommunications\">Telecommunications</option>\r\n      <option value=\"Textiles\">Textiles</option>\r\n      <option value=\"Think Tanks\">Think Tanks</option>\r\n      <option value=\"Tobacco\">Tobacco</option>\r\n      <option value=\"Translation/Localization\">Translation/Localization</option>\r\n      <option value=\"Transportation\">Transportation</option>\r\n      <option value=\"Utilities\">Utilities</option>\r\n      <option value=\"Venture Capital/VC\">Venture Capital/VC</option>\r\n      <option value=\"Veterinary\">Veterinary</option>\r\n      <option value=\"Warehousing\">Warehousing</option>\r\n      <option value=\"Wholesale\">Wholesale</option>\r\n      <option value=\"Wine/Spirits\">Wine/Spirits</option>\r\n      <option value=\"Wireless\">Wireless</option>\r\n      <option value=\"Writing/Editing\">Writing/Editing</option>\r\n</select>\r\n\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <h4>Area or Department</h4>\r\n        <select className=\"form-control dropdown\" id=\"area\" name=\"area\" value={area} onChange={e => onChange(e)}>\r\n        <option value=\"\"> --- Choose One --- </option>\r\n        <option value=\"Accounting\">Accounting</option>\r\n<option value=\"Executive\">Executive</option>\r\n<option value=\"Finance\">Finance</option>\r\n<option value=\"Human Resources\">Human Resources</option>\r\n<option value=\"Legal\">Legal</option>\r\n<option value=\"Management\">Management</option>\r\n<option value=\"Other\">Other</option>\r\n<option value=\"Procurement\">Procurement</option>\r\n<option value=\"Project Management\">Project Management</option>\r\n<option value=\"Sales\">Sales</option>\r\n<option value=\"Support\">Support</option>\r\n<option value=\"Technology\">Technology</option>\r\n\r\n        </select>\r\n      </div>\r\n\r\n\r\n            <div className=\"form-group\">\r\n                  <h4>Job Title</h4>\r\n              <input type=\"text\" placeholder=\"\" name=\"jobtitle\" value={jobtitle} onChange={e => onChange(e)} />\r\n            </div>\r\n\r\n      <input type='submit' className='btn btn-primary my-1' />\r\n      <Link className='btn btn-light my-1' to='/dashboard'>\r\n        Go Back\r\n      </Link>\r\n    </form>\r\n\r\n    </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nCreateProfile.propTypes = {\r\ncreateProfile: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, {createProfile})(withRouter(CreateProfile));\r\n","C:\\Users\\afles\\CauseThis\\client\\src\\components\\profileform\\EditProfile.js",["185","186"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\r\nimport formatDate from '../../utils/formatDate';\r\n\r\n\r\nconst EditProfile = ({\r\n  profile: { profile, loading },\r\n  createProfile,\r\n  getCurrentProfile,\r\n  history\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    birth: '',\r\n    country: '',\r\n    zip: '',\r\n    city: '',\r\n    gender: '',\r\n    height: '',\r\n    weight: '',\r\n    ethnicityandrace: [],\r\n    industry: '',\r\n    area: '',\r\n    jobtitle: '',\r\n    date: ''\r\n  });\r\n\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n    setFormData({\r\n      birth: loading || !profile.birth ? '' : formatDate(profile.birth),\r\n      country: loading || !profile.country ? '' : isUnitedStates(profile.country),\r\n      city: loading || !profile.city ? '' : profile.city,\r\n      zip: loading || !profile.zip ? '' : profile.zip,\r\n      gender: loading || !profile.gender ? '' : profile.gender,\r\n      height: loading || !profile.height ? '' : htInFeetInches(profile.height),\r\n      weight: loading || !profile.weight ? '' : profile.weight,\r\n      ethnicityandrace: loading || !profile.ethnicityandrace ? '' : profile.ethnicityandrace,\r\n      industry: loading || !profile.industry ? '' : profile.industry,\r\n      area: loading || !profile.area ? '' : profile.area,\r\n      jobtitle: loading || !profile.jobtitle ? '' : profile.jobtitle,\r\n    });\r\n  }, [loading, getCurrentProfile]);\r\n\r\n  const {\r\n    birth,\r\n    country,\r\n    zip,\r\n    city,\r\n    gender,\r\n    height,\r\n    weight,\r\n    ethnicityandrace,\r\n    industry,\r\n    area,\r\n    jobtitle\r\n  } = formData;\r\n\r\n\r\n  const onChange = e => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  }\r\n\r\n  const onSelectChange = () => {\r\n    let select = document.getElementById('ethnicityandrace')\r\n    let ethnic = [...select.options].filter(option => option.selected).map(option => option.value);\r\n    setFormData({...formData, ethnicityandrace: ethnic});\r\n  }\r\n\r\n  const isUnitedStates = (country) => {\r\n    let whatCountry = country;\r\n    console.log(whatCountry);\r\n    if (whatCountry === 'United States of America') {\r\n      document.getElementById(\"zip\").style.display = 'block';\r\n      document.getElementById(\"city\").style.display = 'none';\r\n\r\n    } else {\r\n      console.log('Not US ' + whatCountry);\r\n      document.getElementById(\"zip\").style.display = 'none';\r\n      document.getElementById(\"city\").style.display = 'block';\r\n    }\r\n    setFormData({ ...formData, country: whatCountry });\r\n    return whatCountry;\r\n  }\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    console.log(formData);\r\n    createProfile(formData, history, true);\r\n  }\r\n\r\n  const htInFeetInches = (height) => {\r\n    let heightTotalInches = height;\r\n    let heightFeet = Math.floor(heightTotalInches/12);\r\n    let heightFeetInch = heightFeet * 12;\r\n    let heightInches = heightTotalInches - heightFeetInch;\r\n    document.querySelector(\"[name='htft']\").value = heightFeet;\r\n    document.querySelector(\"[name='htin']\").value = heightInches;\r\n    return heightTotalInches;\r\n  }\r\n\r\n  const htChange = () => {\r\n    let htft = document.querySelector(\"[name='htft']\").value * 12;\r\n    let htftInt = htft ? parseInt(htft) : 0;\r\n    let htin=document.querySelector(\"[name='htin']\").value;\r\n    let htinInt = htin ? parseInt(htin) : 0;\r\n    let htToInches = htftInt + htinInt;\r\n    setFormData({...formData, height: htToInches});\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Edit Your Profile</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user' /> Add or change your profile\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className='form' onSubmit={e => onSubmit(e)}>\r\n      <div className=\"form-group\">\r\n        <h4>Birth Date</h4>\r\n        <input type=\"text\" className=\"number\" name=\"birth\" value={birth} onChange={e => onChange(e)} />\r\n        <small className=\"form-text\"\r\n          ></small\r\n        >\r\n      </div>\r\n      <div className=\"form-group\">\r\n      <h4>Country</h4>\r\n        <select className=\"form-control dropdown\" id=\"country\" name=\"country\" value={country} onChange={e => isUnitedStates(e.target.value)}>\r\n <option value=\"\">--- Choose One ---</option>\r\n <option value=\"United States of America\">United States of America</option>\r\n <option value=\"Afganistan\">Afghanistan</option>\r\n <option value=\"Albania\">Albania</option>\r\n <option value=\"Algeria\">Algeria</option>\r\n <option value=\"American Samoa\">American Samoa</option>\r\n <option value=\"Andorra\">Andorra</option>\r\n <option value=\"Angola\">Angola</option>\r\n <option value=\"Anguilla\">Anguilla</option>\r\n <option value=\"Antigua & Barbuda\">Antigua & Barbuda</option>\r\n <option value=\"Argentina\">Argentina</option>\r\n <option value=\"Armenia\">Armenia</option>\r\n <option value=\"Aruba\">Aruba</option>\r\n <option value=\"Australia\">Australia</option>\r\n <option value=\"Austria\">Austria</option>\r\n <option value=\"Azerbaijan\">Azerbaijan</option>\r\n <option value=\"Bahamas\">Bahamas</option>\r\n <option value=\"Bahrain\">Bahrain</option>\r\n <option value=\"Bangladesh\">Bangladesh</option>\r\n <option value=\"Barbados\">Barbados</option>\r\n <option value=\"Belarus\">Belarus</option>\r\n <option value=\"Belgium\">Belgium</option>\r\n <option value=\"Belize\">Belize</option>\r\n <option value=\"Benin\">Benin</option>\r\n <option value=\"Bermuda\">Bermuda</option>\r\n <option value=\"Bhutan\">Bhutan</option>\r\n <option value=\"Bolivia\">Bolivia</option>\r\n <option value=\"Bonaire\">Bonaire</option>\r\n <option value=\"Bosnia & Herzegovina\">Bosnia & Herzegovina</option>\r\n <option value=\"Botswana\">Botswana</option>\r\n <option value=\"Brazil\">Brazil</option>\r\n <option value=\"British Indian Ocean Ter\">British Indian Ocean Ter</option>\r\n <option value=\"Brunei\">Brunei</option>\r\n <option value=\"Bulgaria\">Bulgaria</option>\r\n <option value=\"Burkina Faso\">Burkina Faso</option>\r\n <option value=\"Burundi\">Burundi</option>\r\n <option value=\"Cambodia\">Cambodia</option>\r\n <option value=\"Cameroon\">Cameroon</option>\r\n <option value=\"Canada\">Canada</option>\r\n <option value=\"Canary Islands\">Canary Islands</option>\r\n <option value=\"Cape Verde\">Cape Verde</option>\r\n <option value=\"Cayman Islands\">Cayman Islands</option>\r\n <option value=\"Central African Republic\">Central African Republic</option>\r\n <option value=\"Chad\">Chad</option>\r\n <option value=\"Channel Islands\">Channel Islands</option>\r\n <option value=\"Chile\">Chile</option>\r\n <option value=\"China\">China</option>\r\n <option value=\"Christmas Island\">Christmas Island</option>\r\n <option value=\"Cocos Island\">Cocos Island</option>\r\n <option value=\"Colombia\">Colombia</option>\r\n <option value=\"Comoros\">Comoros</option>\r\n <option value=\"Congo\">Congo</option>\r\n <option value=\"Cook Islands\">Cook Islands</option>\r\n <option value=\"Costa Rica\">Costa Rica</option>\r\n <option value=\"Cote DIvoire\">Cote DIvoire</option>\r\n <option value=\"Croatia\">Croatia</option>\r\n <option value=\"Cuba\">Cuba</option>\r\n <option value=\"Curaco\">Curacao</option>\r\n <option value=\"Cyprus\">Cyprus</option>\r\n <option value=\"Czech Republic\">Czech Republic</option>\r\n <option value=\"Denmark\">Denmark</option>\r\n <option value=\"Djibouti\">Djibouti</option>\r\n <option value=\"Dominica\">Dominica</option>\r\n <option value=\"Dominican Republic\">Dominican Republic</option>\r\n <option value=\"East Timor\">East Timor</option>\r\n <option value=\"Ecuador\">Ecuador</option>\r\n <option value=\"Egypt\">Egypt</option>\r\n <option value=\"El Salvador\">El Salvador</option>\r\n <option value=\"Equatorial Guinea\">Equatorial Guinea</option>\r\n <option value=\"Eritrea\">Eritrea</option>\r\n <option value=\"Estonia\">Estonia</option>\r\n <option value=\"Ethiopia\">Ethiopia</option>\r\n <option value=\"Falkland Islands\">Falkland Islands</option>\r\n <option value=\"Faroe Islands\">Faroe Islands</option>\r\n <option value=\"Fiji\">Fiji</option>\r\n <option value=\"Finland\">Finland</option>\r\n <option value=\"France\">France</option>\r\n <option value=\"French Guiana\">French Guiana</option>\r\n <option value=\"French Polynesia\">French Polynesia</option>\r\n <option value=\"French Southern Ter\">French Southern Ter</option>\r\n <option value=\"Gabon\">Gabon</option>\r\n <option value=\"Gambia\">Gambia</option>\r\n <option value=\"Georgia\">Georgia</option>\r\n <option value=\"Germany\">Germany</option>\r\n <option value=\"Ghana\">Ghana</option>\r\n <option value=\"Gibraltar\">Gibraltar</option>\r\n <option value=\"Great Britain\">Great Britain</option>\r\n <option value=\"Greece\">Greece</option>\r\n <option value=\"Greenland\">Greenland</option>\r\n <option value=\"Grenada\">Grenada</option>\r\n <option value=\"Guadeloupe\">Guadeloupe</option>\r\n <option value=\"Guam\">Guam</option>\r\n <option value=\"Guatemala\">Guatemala</option>\r\n <option value=\"Guinea\">Guinea</option>\r\n <option value=\"Guyana\">Guyana</option>\r\n <option value=\"Haiti\">Haiti</option>\r\n <option value=\"Hawaii\">Hawaii</option>\r\n <option value=\"Honduras\">Honduras</option>\r\n <option value=\"Hong Kong\">Hong Kong</option>\r\n <option value=\"Hungary\">Hungary</option>\r\n <option value=\"Iceland\">Iceland</option>\r\n <option value=\"Indonesia\">Indonesia</option>\r\n <option value=\"India\">India</option>\r\n <option value=\"Iran\">Iran</option>\r\n <option value=\"Iraq\">Iraq</option>\r\n <option value=\"Ireland\">Ireland</option>\r\n <option value=\"Isle of Man\">Isle of Man</option>\r\n <option value=\"Israel\">Israel</option>\r\n <option value=\"Italy\">Italy</option>\r\n <option value=\"Jamaica\">Jamaica</option>\r\n <option value=\"Japan\">Japan</option>\r\n <option value=\"Jordan\">Jordan</option>\r\n <option value=\"Kazakhstan\">Kazakhstan</option>\r\n <option value=\"Kenya\">Kenya</option>\r\n <option value=\"Kiribati\">Kiribati</option>\r\n <option value=\"Korea North\">Korea North</option>\r\n <option value=\"Korea Sout\">Korea South</option>\r\n <option value=\"Kuwait\">Kuwait</option>\r\n <option value=\"Kyrgyzstan\">Kyrgyzstan</option>\r\n <option value=\"Laos\">Laos</option>\r\n <option value=\"Latvia\">Latvia</option>\r\n <option value=\"Lebanon\">Lebanon</option>\r\n <option value=\"Lesotho\">Lesotho</option>\r\n <option value=\"Liberia\">Liberia</option>\r\n <option value=\"Libya\">Libya</option>\r\n <option value=\"Liechtenstein\">Liechtenstein</option>\r\n <option value=\"Lithuania\">Lithuania</option>\r\n <option value=\"Luxembourg\">Luxembourg</option>\r\n <option value=\"Macau\">Macau</option>\r\n <option value=\"Macedonia\">Macedonia</option>\r\n <option value=\"Madagascar\">Madagascar</option>\r\n <option value=\"Malaysia\">Malaysia</option>\r\n <option value=\"Malawi\">Malawi</option>\r\n <option value=\"Maldives\">Maldives</option>\r\n <option value=\"Mali\">Mali</option>\r\n <option value=\"Malta\">Malta</option>\r\n <option value=\"Marshall Islands\">Marshall Islands</option>\r\n <option value=\"Martinique\">Martinique</option>\r\n <option value=\"Mauritania\">Mauritania</option>\r\n <option value=\"Mauritius\">Mauritius</option>\r\n <option value=\"Mayotte\">Mayotte</option>\r\n <option value=\"Mexico\">Mexico</option>\r\n <option value=\"Midway Islands\">Midway Islands</option>\r\n <option value=\"Moldova\">Moldova</option>\r\n <option value=\"Monaco\">Monaco</option>\r\n <option value=\"Mongolia\">Mongolia</option>\r\n <option value=\"Montserrat\">Montserrat</option>\r\n <option value=\"Morocco\">Morocco</option>\r\n <option value=\"Mozambique\">Mozambique</option>\r\n <option value=\"Myanmar\">Myanmar</option>\r\n <option value=\"Nambia\">Nambia</option>\r\n <option value=\"Nauru\">Nauru</option>\r\n <option value=\"Nepal\">Nepal</option>\r\n <option value=\"Netherland Antilles\">Netherland Antilles</option>\r\n <option value=\"Netherlands\">Netherlands (Holland, Europe)</option>\r\n <option value=\"Nevis\">Nevis</option>\r\n <option value=\"New Caledonia\">New Caledonia</option>\r\n <option value=\"New Zealand\">New Zealand</option>\r\n <option value=\"Nicaragua\">Nicaragua</option>\r\n <option value=\"Niger\">Niger</option>\r\n <option value=\"Nigeria\">Nigeria</option>\r\n <option value=\"Niue\">Niue</option>\r\n <option value=\"Norfolk Island\">Norfolk Island</option>\r\n <option value=\"Norway\">Norway</option>\r\n <option value=\"Oman\">Oman</option>\r\n <option value=\"Pakistan\">Pakistan</option>\r\n <option value=\"Palau Island\">Palau Island</option>\r\n <option value=\"Palestine\">Palestine</option>\r\n <option value=\"Panama\">Panama</option>\r\n <option value=\"Papua New Guinea\">Papua New Guinea</option>\r\n <option value=\"Paraguay\">Paraguay</option>\r\n <option value=\"Peru\">Peru</option>\r\n <option value=\"Phillipines\">Philippines</option>\r\n <option value=\"Pitcairn Island\">Pitcairn Island</option>\r\n <option value=\"Poland\">Poland</option>\r\n <option value=\"Portugal\">Portugal</option>\r\n <option value=\"Puerto Rico\">Puerto Rico</option>\r\n <option value=\"Qatar\">Qatar</option>\r\n <option value=\"Republic of Montenegro\">Republic of Montenegro</option>\r\n <option value=\"Republic of Serbia\">Republic of Serbia</option>\r\n <option value=\"Reunion\">Reunion</option>\r\n <option value=\"Romania\">Romania</option>\r\n <option value=\"Russia\">Russia</option>\r\n <option value=\"Rwanda\">Rwanda</option>\r\n <option value=\"St Barthelemy\">St Barthelemy</option>\r\n <option value=\"St Eustatius\">St Eustatius</option>\r\n <option value=\"St Helena\">St Helena</option>\r\n <option value=\"St Kitts-Nevis\">St Kitts-Nevis</option>\r\n <option value=\"St Lucia\">St Lucia</option>\r\n <option value=\"St Maarten\">St Maarten</option>\r\n <option value=\"St Pierre & Miquelon\">St Pierre & Miquelon</option>\r\n <option value=\"St Vincent & Grenadines\">St Vincent & Grenadines</option>\r\n <option value=\"Saipan\">Saipan</option>\r\n <option value=\"Samoa\">Samoa</option>\r\n <option value=\"Samoa American\">Samoa American</option>\r\n <option value=\"San Marino\">San Marino</option>\r\n <option value=\"Sao Tome & Principe\">Sao Tome & Principe</option>\r\n <option value=\"Saudi Arabia\">Saudi Arabia</option>\r\n <option value=\"Senegal\">Senegal</option>\r\n <option value=\"Seychelles\">Seychelles</option>\r\n <option value=\"Sierra Leone\">Sierra Leone</option>\r\n <option value=\"Singapore\">Singapore</option>\r\n <option value=\"Slovakia\">Slovakia</option>\r\n <option value=\"Slovenia\">Slovenia</option>\r\n <option value=\"Solomon Islands\">Solomon Islands</option>\r\n <option value=\"Somalia\">Somalia</option>\r\n <option value=\"South Africa\">South Africa</option>\r\n <option value=\"Spain\">Spain</option>\r\n <option value=\"Sri Lanka\">Sri Lanka</option>\r\n <option value=\"Sudan\">Sudan</option>\r\n <option value=\"Suriname\">Suriname</option>\r\n <option value=\"Swaziland\">Swaziland</option>\r\n <option value=\"Sweden\">Sweden</option>\r\n <option value=\"Switzerland\">Switzerland</option>\r\n <option value=\"Syria\">Syria</option>\r\n <option value=\"Tahiti\">Tahiti</option>\r\n <option value=\"Taiwan\">Taiwan</option>\r\n <option value=\"Tajikistan\">Tajikistan</option>\r\n <option value=\"Tanzania\">Tanzania</option>\r\n <option value=\"Thailand\">Thailand</option>\r\n <option value=\"Togo\">Togo</option>\r\n <option value=\"Tokelau\">Tokelau</option>\r\n <option value=\"Tonga\">Tonga</option>\r\n <option value=\"Trinidad & Tobago\">Trinidad & Tobago</option>\r\n <option value=\"Tunisia\">Tunisia</option>\r\n <option value=\"Turkey\">Turkey</option>\r\n <option value=\"Turkmenistan\">Turkmenistan</option>\r\n <option value=\"Turks & Caicos Is\">Turks & Caicos Is</option>\r\n <option value=\"Tuvalu\">Tuvalu</option>\r\n <option value=\"Uganda\">Uganda</option>\r\n <option value=\"United Kingdom\">United Kingdom</option>\r\n <option value=\"Ukraine\">Ukraine</option>\r\n <option value=\"United Arab Erimates\">United Arab Emirates</option>\r\n <option value=\"United States of America\">United States of America</option>\r\n <option value=\"Uraguay\">Uruguay</option>\r\n <option value=\"Uzbekistan\">Uzbekistan</option>\r\n <option value=\"Vanuatu\">Vanuatu</option>\r\n <option value=\"Vatican City State\">Vatican City State</option>\r\n <option value=\"Venezuela\">Venezuela</option>\r\n <option value=\"Vietnam\">Vietnam</option>\r\n <option value=\"Virgin Islands (Brit)\">Virgin Islands (Brit)</option>\r\n <option value=\"Virgin Islands (USA)\">Virgin Islands (USA)</option>\r\n <option value=\"Wake Island\">Wake Island</option>\r\n <option value=\"Wallis & Futana Is\">Wallis & Futana Is</option>\r\n <option value=\"Yemen\">Yemen</option>\r\n <option value=\"Zaire\">Zaire</option>\r\n <option value=\"Zambia\">Zambia</option>\r\n <option value=\"Zimbabwe\">Zimbabwe</option>\r\n        </select>\r\n      </div>\r\n      <div id=\"zip\" className=\"form-group\">\r\n            <h4>Zip Code</h4>\r\n        <input type=\"number\" className=\"number\" placeholder=\"zip\" name=\"zip\" value={zip} onChange={e => onChange(e)} />\r\n      </div>\r\n      <div id=\"city\" className=\"form-group\">\r\n            <h4>City/Town/Village</h4>\r\n        <input type=\"text\" placeholder=\"\" name=\"city\" value={city} onChange={e => onChange(e)} />\r\n      </div>\r\n      <div className=\"form-group\">\r\n            <h4>Gender</h4>\r\n            <select className=\"form-control dropdown\" id=\"gender\" name=\"gender\" value={gender} onChange={e => onChange(e)}>\r\n            <option value=\"\"> --- Choose One --- </option>\r\n            <option value=\"Male\">Male</option>\r\n            <option value=\"Female\">Female</option>\r\n            <option value=\"Other\">Other</option>\r\n            </select>\r\n      </div>\r\n\r\n\r\n      <div className=\"form-group\">\r\n                <h4>Height</h4>\r\n            <div className=\"inline\"><input type=\"number\" className=\"\" placeholder=\"Ft\" name=\"htft\" onChange={e => htChange(e)} /> Feet </div>\r\n            <div className=\"inline\"><input type=\"number\" className=\"\" placeholder=\"In\" name=\"htin\" onChange={e => htChange(e)} /> Inches </div>\r\n          </div>\r\n\r\n      <div className=\"form-group\">\r\n            <h4>Weight (lbs)</h4>\r\n        <input type=\"number\" placeholder=\"\" min=\"0\" className=\"number\" name=\"weight\" value={weight} onChange={e => onChange(e)} />\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <h4>Ethnicity & Race</h4>\r\n        <select multiple size=\"6\" className=\"form-control dropdown\" id=\"ethnicityandrace\" name=\"ethnicityandrace\" value={ethnicityandrace} onChange={e => onSelectChange(e)}>\r\n  <option value=\"American Indian or Alaska Native\">American Indian or Alaska Native</option>\r\n  <option value=\"Asian\">Asian</option>\r\n  <option value=\"Black or African American\">Black or African American</option>\r\n  <option value=\"Hispanic or Latino\">Hispanic or Latino</option>\r\n  <option value=\"Native Hawaiian or Other Pacific Islander\">Native Hawaiian or Other Pacific Islander</option>\r\n  <option value=\"White\">White</option>\r\n</select>\r\n      </div>\r\n\r\n        <div className=\"form-group\">\r\n          <h4>Industry</h4>\r\n            <select className=\"form-control dropdown\" id=\"industry\" name=\"industry\" value={industry} onChange={e => onChange(e)}>\r\n          <option value=\"Choose\"> --- Choose One --- </option>\r\n        <option value=\"Accounting\">Accounting</option>\r\n        <option value=\"Airlines/Aviation\">Airlines/Aviation</option>\r\n        <option value=\"Alternative Dispute Resolution\">Alternative Dispute Resolution</option>\r\n        <option value=\"Alternative Medicine\">Alternative Medicine</option>\r\n        <option value=\"Animation\">Animation</option>\r\n        <option value=\"Apparel/Fashion\">Apparel/Fashion</option>\r\n        <option value=\"Architecture/Planning\">Architecture/Planning</option>\r\n        <option value=\"Arts/Crafts\">Arts/Crafts</option>\r\n        <option value=\"Automotive\">Automotive</option>\r\n        <option value=\"Aviation/Aerospace\">Aviation/Aerospace</option>\r\n        <option value=\"Banking/Mortgage\">Banking/Mortgage</option>\r\n        <option value=\"Biotechnology/Greentech\">Biotechnology/Greentech</option>\r\n        <option value=\"Broadcast Media\">Broadcast Media</option>\r\n        <option value=\"Building Materials\">Building Materials</option>\r\n        <option value=\"Business Supplies/Equipment\">Business Supplies/Equipment</option>\r\n        <option value=\"Capital Markets/Hedge Fund/Private Equity\">Capital Markets/Hedge Fund/Private Equity</option>\r\n        <option value=\"Chemicals\">Chemicals</option>\r\n        <option value=\"Civic/Social Organization\">Civic/Social Organization</option>\r\n        <option value=\"Civil Engineering\">Civil Engineering</option>\r\n        <option value=\"Commercial Real Estate\">Commercial Real Estate</option>\r\n        <option value=\"Computer Games\">Computer Games</option>\r\n        <option value=\"Computer Hardware\">Computer Hardware</option>\r\n        <option value=\"Computer Networking\">Computer Networking</option>\r\n        <option value=\"Computer Software/Engineering\">Computer Software/Engineering</option>\r\n        <option value=\"Computer/Network Security\">Computer/Network Security</option>\r\n        <option value=\"Construction\">Construction</option>\r\n        <option value=\"Consumer Electronics\">Consumer Electronics</option>\r\n        <option value=\"Consumer Goods\">Consumer Goods</option>\r\n        <option value=\"Consumer Services\">Consumer Services</option>\r\n        <option value=\"Cosmetics\">Cosmetics</option>\r\n        <option value=\"Dairy\">Dairy</option>\r\n        <option value=\"Defense/Space\">Defense/Space</option>\r\n        <option value=\"Design\">Design</option>\r\n        <option value=\"E-Learning\">E-Learning</option>\r\n        <option value=\"Education Management\">Education Management</option>\r\n        <option value=\"Electrical/Electronic Manufacturing\">Electrical/Electronic Manufacturing</option>\r\n        <option value=\"Entertainment/Movie Production\">Entertainment/Movie Production</option>\r\n        <option value=\"Environmental Services\">Environmental Services</option>\r\n        <option value=\"Events Services\">Events Services</option>\r\n        <option value=\"Executive Office\">Executive Office</option>\r\n        <option value=\"Facilities Services\">Facilities Services</option>\r\n        <option value=\"Farming\">Farming</option>\r\n        <option value=\"Financial Services\">Financial Services</option>\r\n        <option value=\"Fine Art\">Fine Art</option>\r\n        <option value=\"Fishery\">Fishery</option>\r\n        <option value=\"Food Production\">Food Production</option>\r\n        <option value=\"Food/Beverages\">Food/Beverages</option>\r\n        <option value=\"Fundraising\">Fundraising</option>\r\n        <option value=\"Furniture\">Furniture</option>\r\n        <option value=\"Gambling/Casinos\">Gambling/Casinos</option>\r\n        <option value=\"Glass/Ceramics/Concrete\">Glass/Ceramics/Concrete</option>\r\n        <option value=\"Government Administration\">Government Administration</option>\r\n        <option value=\"Government Relations\">Government Relations</option>\r\n        <option value=\"Graphic Design/Web Design\">Graphic Design/Web Design</option>\r\n        <option value=\"Health/Fitness\">Health/Fitness</option>\r\n        <option value=\"Higher Education/Acadamia\">Higher Education/Acadamia</option>\r\n        <option value=\"Hospital/Health Care\">Hospital/Health Care</option>\r\n        <option value=\"Hospitality\">Hospitality</option>\r\n        <option value=\"Human Resources/HR\">Human Resources/HR</option>\r\n        <option value=\"Import/Export\">Import/Export</option>\r\n        <option value=\"Individual/Family Services\">Individual/Family Services</option>\r\n        <option value=\"Industrial Automation\">Industrial Automation</option>\r\n        <option value=\"Information Services\">Information Services</option>\r\n        <option value=\"Information Technology/IT\">Information Technology/IT</option>\r\n        <option value=\"Insurance\">Insurance</option>\r\n        <option value=\"International Affairs\">International Affairs</option>\r\n        <option value=\"International Trade/Development\">International Trade/Development</option>\r\n        <option value=\"Internet\">Internet</option>\r\n        <option value=\"Investment Banking/Venture\">Investment Banking/Venture</option>\r\n        <option value=\"Investment Management/Hedge Fund/Private Equity\">Investment Management/Hedge Fund/Private Equity</option>\r\n        <option value=\"Judiciary\">Judiciary</option>\r\n        <option value=\"Law Enforcement\">Law Enforcement</option>\r\n        <option value=\"Law Practice/Law Firms\">Law Practice/Law Firms</option>\r\n        <option value=\"Legal Services\">Legal Services</option>\r\n        <option value=\"Legislative Office\">Legislative Office</option>\r\n        <option value=\"Leisure/Travel\">Leisure/Travel</option>\r\n        <option value=\"Library\">Library</option>\r\n        <option value=\"Logistics/Procurement\">Logistics/Procurement</option>\r\n        <option value=\"Luxury Goods/Jewelry\">Luxury Goods/Jewelry</option>\r\n        <option value=\"Machinery\">Machinery</option>\r\n        <option value=\"Management Consulting\">Management Consulting</option>\r\n        <option value=\"Maritime\">Maritime</option>\r\n        <option value=\"Market Research\">Market Research</option>\r\n        <option value=\"Marketing/Advertising/Sales\">Marketing/Advertising/Sales</option>\r\n        <option value=\"Mechanical or Industrial Engineering\">Mechanical or Industrial Engineering</option>\r\n        <option value=\"Media Production\">Media Production</option>\r\n        <option value=\"Medical Equipment\">Medical Equipment</option>\r\n        <option value=\"Medical Practice\">Medical Practice</option>\r\n        <option value=\"Mental Health Care\">Mental Health Care</option>\r\n        <option value=\"Military Industry\">Military Industry</option>\r\n        <option value=\"Mining/Metals\">Mining/Metals</option>\r\n        <option value=\"Motion Pictures/Film\">Motion Pictures/Film</option>\r\n        <option value=\"Museums/Institutions\">Museums/Institutions</option>\r\n        <option value=\"Music\">Music</option>\r\n        <option value=\"Nanotechnology\">Nanotechnology</option>\r\n        <option value=\"Newspapers/Journalism\">Newspapers/Journalism</option>\r\n        <option value=\"Non-Profit/Volunteering\">Non-Profit/Volunteering</option>\r\n        <option value=\"Oil/Energy/Solar/Greentech\">Oil/Energy/Solar/Greentech</option>\r\n        <option value=\"Online Publishing\">Online Publishing</option>\r\n        <option value=\"Other Industry\">Other Industry</option>\r\n        <option value=\"Outsourcing/Offshoring\">Outsourcing/Offshoring</option>\r\n        <option value=\"Package/Freight Delivery\">Package/Freight Delivery</option>\r\n        <option value=\"Packaging/Containers\">Packaging/Containers</option>\r\n        <option value=\"Paper/Forest Products\">Paper/Forest Products</option>\r\n        <option value=\"Performing Arts\">Performing Arts</option>\r\n        <option value=\"Pharmaceuticals\">Pharmaceuticals</option>\r\n        <option value=\"Philanthropy\">Philanthropy</option>\r\n        <option value=\"Photography\">Photography</option>\r\n        <option value=\"Plastics\">Plastics</option>\r\n        <option value=\"Political Organization\">Political Organization</option>\r\n        <option value=\"Primary/Secondary Education\">Primary/Secondary Education</option>\r\n        <option value=\"Printing\">Printing</option>\r\n        <option value=\"Professional Training\">Professional Training</option>\r\n        <option value=\"Program Development\">Program Development</option>\r\n        <option value=\"Public Relations/PR\">Public Relations/PR</option>\r\n        <option value=\"Public Safety\">Public Safety</option>\r\n        <option value=\"Publishing Industry\">Publishing Industry</option>\r\n        <option value=\"Railroad Manufacture\">Railroad Manufacture</option>\r\n        <option value=\"Ranching\">Ranching</option>\r\n        <option value=\"Real Estate/Mortgage\">Real Estate/Mortgage</option>\r\n        <option value=\"Recreational Facilities/Services\">Recreational Facilities/Services</option>\r\n        <option value=\"Religious Institutions\">Religious Institutions</option>\r\n        <option value=\"Renewables/Environment\">Renewables/Environment</option>\r\n        <option value=\"Research Industry\">Research Industry</option>\r\n        <option value=\"Restaurants\">Restaurants</option>\r\n        <option value=\"Retail Industry\">Retail Industry</option>\r\n        <option value=\"Security/Investigations\">Security/Investigations</option>\r\n        <option value=\"Semiconductors\">Semiconductors</option>\r\n        <option value=\"Shipbuilding\">Shipbuilding</option>\r\n        <option value=\"Sporting Goods\">Sporting Goods</option>\r\n        <option value=\"Sports\">Sports</option>\r\n        <option value=\"Staffing/Recruiting\">Staffing/Recruiting</option>\r\n        <option value=\"Supermarkets\">Supermarkets</option>\r\n        <option value=\"Telecommunications\">Telecommunications</option>\r\n        <option value=\"Textiles\">Textiles</option>\r\n        <option value=\"Think Tanks\">Think Tanks</option>\r\n        <option value=\"Tobacco\">Tobacco</option>\r\n        <option value=\"Translation/Localization\">Translation/Localization</option>\r\n        <option value=\"Transportation\">Transportation</option>\r\n        <option value=\"Utilities\">Utilities</option>\r\n        <option value=\"Venture Capital/VC\">Venture Capital/VC</option>\r\n        <option value=\"Veterinary\">Veterinary</option>\r\n        <option value=\"Warehousing\">Warehousing</option>\r\n        <option value=\"Wholesale\">Wholesale</option>\r\n        <option value=\"Wine/Spirits\">Wine/Spirits</option>\r\n        <option value=\"Wireless\">Wireless</option>\r\n        <option value=\"Writing/Editing\">Writing/Editing</option>\r\n  </select>\r\n\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <h4>Area or Department</h4>\r\n          <select className=\"form-control dropdown\" id=\"area\" name=\"area\" value={area} onChange={e => onChange(e)}>\r\n          <option value=\"\"> --- Choose One --- </option>\r\n          <option value=\"Accounting\">Accounting</option>\r\n<option value=\"Executive\">Executive</option>\r\n<option value=\"Finance\">Finance</option>\r\n<option value=\"Human Resources\">Human Resources</option>\r\n<option value=\"Legal\">Legal</option>\r\n<option value=\"Management\">Management</option>\r\n<option value=\"Other\">Other</option>\r\n<option value=\"Procurement\">Procurement</option>\r\n<option value=\"Project Management\">Project Management</option>\r\n<option value=\"Sales\">Sales</option>\r\n<option value=\"Support\">Support</option>\r\n<option value=\"Technology\">Technology</option>\r\n\r\n          </select>\r\n        </div>\r\n\r\n\r\n              <div className=\"form-group\">\r\n                    <h4>Job Title</h4>\r\n                <input type=\"text\" placeholder=\"\" name=\"jobtitle\" value={jobtitle} onChange={e => onChange(e)} />\r\n              </div>\r\n\r\n        <input type='submit' className='btn btn-primary my-1' />\r\n        <Link className='btn btn-light my-1' to='/dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nEditProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createProfile, getCurrentProfile }\r\n)(withRouter(EditProfile));\r\n","C:\\Users\\afles\\CauseThis\\client\\src\\components\\layout\\spinner.js",["187"],"import React, { Fragment } from 'react';\r\nimport spinner from '../../img/spinner.gif';\r\n\r\nexport default () => (\r\n  <Fragment>\r\n    <img\r\n      src={spinner}\r\n      style={{width: '200px', margin: 'auto',display: 'block'}}\r\n      alt='Loading...'\r\n    />\r\n  </Fragment>\r\n);\r\n","C:\\Users\\afles\\CauseThis\\client\\src\\components\\profile\\Profile.js",[],"C:\\Users\\afles\\CauseThis\\client\\src\\components\\profile\\ProfileTop.js",[],"C:\\Users\\afles\\CauseThis\\client\\src\\components\\profile\\ProfileAbout.js",[],"C:\\Users\\afles\\CauseThis\\client\\src\\components\\post\\PostForm.js",["188","189","190","191","192","193","194","195"],"import React, { useState, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addPost } from '../../actions/post';\r\n\r\nconst PostForm = ({ addPost }) => {\r\n\r\n  const [formData, setFormData] = useState({\r\n    title: '',\r\n    category: '',\r\n    date: '',\r\n    duration: '',\r\n    location: '',\r\n    notes: '',\r\n    description: '',\r\n    weather: ''\r\n  });\r\n\r\n  const {\r\n    title,\r\n    category,\r\n    date,\r\n    duration,\r\n    location,\r\n    notes,\r\n    description,\r\n    weather\r\n  } = formData;\r\n\r\nconst onClick = e => {\r\n  formData.title = e.target.value;\r\n  formData.category = e.target.getAttribute('cat');\r\n  addPost(formData);\r\n}\r\n\r\nconst onClickDetails = e => {\r\n  setFormData({...formData, title: e.target.value, category: e.target.getAttribute('cat')});\r\n  let modalId = e.target.getAttribute('name');\r\n  let modal = document.getElementById(modalId);\r\n  modal.classList.add(\"modalDialogshow\");\r\n}\r\n\r\nconst onClickClose = e => {\r\n  let modalDivId = e.target.getAttribute('parent')\r\n  let modalParentDiv = document.getElementById(modalDivId);\r\n  modalParentDiv.classList.remove(\"modalDialogshow\");\r\n  document.getElementById(\"notes\").value = \"\";\r\n}\r\n\r\nconst onSubmit = e => {\r\n  onClickClose(e);\r\n  e.preventDefault();\r\n  addPost(formData);\r\n};\r\n\r\nconst onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value});\r\n\r\n\r\n  return (\r\n    <div>\r\n    <div className=\"entrysection\">\r\n        <div className=\"buttonheader\"><h2>Feeling?</h2></div>\r\n        <div className=\"moodblock\">\r\n        <div className=\"btnContainer\">\r\n        <span className=\"btnLabel\">Fine/Content</span><button onClick={e => onClick(e)} type=\"button\" className=\"btnPost green\" category=\"Mood\" value=\"Fine\" name=\"Andrew\" cat=\"Mood\">+</button>\r\n        <button onClick={e => onClickDetails(e)} name=\"moodModal\" type=\"button\" className=\"btnInsert green\" value=\"Fine\">...</button>\r\n        </div>\r\n        <div className=\"btnContainer\">\r\n        <span className=\"btnLabel\">Happy/Joy</span><button onClick={e => onClick(e)} type=\"button\" className=\"btnPost green\" value=\"Happy\" cat=\"Mood\">+</button>\r\n        <button onClick={e => onClickDetails(e)} name=\"moodModal\" type=\"button\" className=\"btnInsert green\" cat=\"Mood\" value=\"Happy\">...</button>\r\n        </div>\r\n        <div className=\"btnContainer\">\r\n        <span className=\"btnLabel\">Productive</span><button onClick={e => onClick(e)} type=\"button\" className=\"btnPost green\" value=\"Productive\" cat=\"Mood\">+</button> <button onClick={e => onClickDetails(e)} name=\"moodModal\" type=\"button\" className=\"btnInsert green\" value=\"Productive\" cat=\"Mood\">...</button>\r\n        </div>\r\n        <div className=\"btnContainer\">\r\n        <span className=\"btnLabel\">In The Zone</span><button onClick={e => onClick(e)} type=\"button\" className=\"btnPost green\" value=\"Zone\" cat=\"Mood\">+</button>\r\n        <button onClick={e => onClickDetails(e)} name=\"moodModal\" type=\"button\" className=\"btnInsert green\" value=\"Zone\" cat=\"Mood\">...</button>\r\n        </div>\r\n        <div className=\"btnContainer btnblock\">\r\n        <span className=\"btnLabel\">Accomplished/Proud</span><button onClick={e => onClick(e)} type=\"button\" className=\"btnPost green\" value=\"Accomplished\" cat=\"Mood\">+</button>\r\n        <button onClick={e => onClickDetails(e)} name=\"moodModal\" type=\"button\" className=\"btnInsert green\" value=\"Acomplished\" cat=\"Mood\">...</button>\r\n        </div>\r\n        <div className=\"btnContainer\">\r\n        <span className=\"btnLabel\">Hungry</span><button onClick={e => onClick(e)} type=\"button\" className=\"btnPost gray\" value=\"Hungry\" cat=\"Mood\">+</button>\r\n        <button onClick={e => onClickDetails(e)} name=\"moodModal\" type=\"button\" className=\"btnInsert gray\" value=\"Hungry\" cat=\"Mood\">...</button>\r\n        </div>\r\n        <div className=\"btnContainer\">\r\n        <span className=\"btnLabel\">Thirsty</span><button onClick={e => onClick(e)} type=\"button\" className=\"btnPost gray\" value=\"Thristy\" cat=\"Mood\">+</button>\r\n        <button onClick={e => onClickDetails(e)} name=\"moodModal\" type=\"button\" className=\"btnInsert gray\" value=\"Thristy\" cat=\"Mood\">...</button>\r\n        </div>\r\n        <div className=\"btnContainer\">\r\n        <span className=\"btnLabel\">Tired</span><button onClick={e => onClick(e)} type=\"button\" className=\"btnPost gray\" value=\"Tired\" cat=\"Mood\">+</button>\r\n        <button onClick={e => onClickDetails(e)} name=\"moodModal\" type=\"button\" className=\"btnInsert gray\" value=\"Tired\" cat=\"Mood\">...</button>\r\n        </div>\r\n        <div className=\"btnContainer btnblock\">\r\n        <span className=\"btnLabel\">Lazy/Unmotivate</span><button onClick={e => onClick(e)} type=\"button\" className=\"btnPost gray\" value=\"Lazy\" cat=\"Mood\">+</button>\r\n        <button onClick={e => onClickDetails(e)} name=\"moodModal\" type=\"button\" className=\"btnInsert gray\" value=\"Lazy\" cat=\"Mood\">...</button>\r\n        </div>\r\n        <div className=\"btnContainer\">\r\n        <span className=\"btnLabel\">Sad</span><button onClick={e => onClick(e)} type=\"button\" className=\"btnPost blue\" value=\"Sad\" cat=\"Mood\">+</button>\r\n        <button onClick={e => onClickDetails(e)} name=\"moodModal\" type=\"button\" className=\"btnInsert blue\" value=\"Sad\" cat=\"Mood\">...</button>\r\n        </div>\r\n        <div className=\"btnContainer\">\r\n        <span className=\"btnLabel\">Anxiety/Stress</span><button onClick={e => onClick(e)} type=\"button\" className=\"btnPost yellow\" value=\"Anxiety\" cat=\"Mood\">+</button>\r\n        <button onClick={e => onClickDetails(e)} name=\"moodModal\" type=\"button\" className=\"btnInsert yellow\" value=\"Anxiety\" cat=\"Mood\">...</button>\r\n        </div>\r\n        <div className=\"btnContainer btnblock\">\r\n        <span className=\"btnLabel\">Anger</span> <button onClick={e => onClick(e)} type=\"button\" className=\"btnPost red\" value=\"Anger\" cat=\"Mood\">+</button>\r\n        <button onClick={e => onClickDetails(e)} name=\"moodModal\" type=\"button\" className=\"btnInsert red\" value=\"Anger\" cat=\"Mood\">...</button>\r\n        </div>\r\n        <div className=\"btnContainer\">\r\n        <span className=\"btnLabel\">Custom</span><button onClick={e => onClick(e)} type=\"button\" className=\"btnPost\" value=\"Custom\" cat=\"Mood\">+</button>\r\n        <button onClick={e => onClickDetails(e)} name=\"moodModal\" type=\"button\" className=\"btnInsert purp\" value=\"Custom\" cat=\"Mood\">...</button>\r\n        </div>\r\n        </div></div>\r\n\r\n        <div className=\"entrysection\">\r\n            <div className=\"buttonheader\"><a id=\"doing\"><h2>Doing?</h2></a></div>\r\n            <div className=\"doingblock\">\r\n            <div className=\"btnContainer\">\r\n            <span className=\"btnLabel\">Eating/Drinking</span>\r\n            <button type=\"button\" className=\"btnPost live\" value=\"Eating/Drinking\" name=\"eatingtype\" cat=\"Food\">+</button>\r\n            <button onClick={e => onClickDetails(e)} name=\"foodModal\" type=\"button\" className=\"btnInsert live\" value=\"Eating/Drinking\" cat=\"Food\">...</button>\r\n            </div>\r\n            <div className=\"btnContainer\">\r\n            <span className=\"btnLabel\">Using Bathroom</span>\r\n            <button type=\"button\" className=\"btnPost live\" value=\"Bathroom\" name=\"Bathroom\" cat=\"Bathroom\">+</button>\r\n            <button onClick={e => onClickDetails(e)} name=\"bathroomModal\" type=\"button\" className=\"btnInsert live\" value=\"Using Bathroom\" cat=\"Bathroom\">...</button>\r\n            </div>\r\n            <div className=\"btnContainer\">\r\n            <span className=\"btnLabel\">Sleeping</span>\r\n            <button type=\"button\" className=\"btnPost live\" value=\"Sleeping\" name=\"sleepingModal\" cat=\"Sleeping\">+</button>\r\n            <button onClick={e => onClickDetails(e)} name=\"moodModal\" type=\"button\" className=\"btnInsert live\" value=\"Eating/Drinking\" cat=\"Food\">...</button>\r\n            </div>\r\n            <div className=\"btnContainer\">\r\n            <span className=\"btnLabel\">Taking Medicine/Pill</span>\r\n            <button type=\"button\" className=\"btnPost live\" value=\"Taking Medicine/Pillls\" name=\"Pills\" cat=\"Medicine\">+</button>\r\n            <button onClick={e => onClickDetails(e)} name=\"moodModal\" type=\"button\" className=\"btnInsert live\" value=\"Eating/Drinking\" cat=\"Food\">...</button>\r\n            </div>\r\n            <div className=\"btnContainer btnblock\">\r\n            <span className=\"btnLabel\">Working</span>\r\n            <button type=\"button\" className=\"btnPost work\" value=\"Working\" name=\"Working\" cat=\"Working\">+</button>\r\n            <button onClick={e => onClickDetails(e)} name=\"moodModal\" type=\"button\" className=\"btnInsert work\" value=\"Eating/Drinking\" cat=\"Food\">...</button>\r\n            </div>\r\n            <div className=\"btnContainer\">\r\n            <span className=\"btnLabel\">Cleaning/House Work</span>\r\n            <button type=\"button\" className=\"btnPost work\" value=\"Cleaning/House Work\" name=\"Cleaning\" cat=\"Cleaing\">+</button>\r\n            <button onClick={e => onClickDetails(e)} name=\"moodModal\" type=\"button\" className=\"btnInsert work\" value=\"Eating/Drinking\" cat=\"Food\">...</button>\r\n            </div>\r\n            <div className=\"btnContainer btnblock\">\r\n            <span className=\"btnLabel\">Errands</span>\r\n            <button type=\"button\" className=\"btnPost work\" value=\"Errands\" name=\"Errands\" cat=\"Cleaing\">+</button>\r\n            <button onClick={e => onClickDetails(e)} name=\"moodModal\" type=\"button\" className=\"btnInsert work\" value=\"Eating/Drinking\" cat=\"Food\">...</button>\r\n            </div>\r\n            <div className=\"btnContainer\">\r\n            <span className=\"btnLabel\">Exercising</span>\r\n            <button type=\"button\" className=\"btnPost fun\" value=\"Exercising\" name=\"Exercising\" cat=\"Exercise\">+</button>\r\n            <button onClick={e => onClickDetails(e)} name=\"moodModal\" type=\"button\" className=\"btnInsert fun\" value=\"Eating/Drinking\" cat=\"Food\">...</button>\r\n            </div>\r\n            <div className=\"btnContainer btnblock\">\r\n            <span className=\"btnLabel\">Playing</span>\r\n            <button type=\"button\" class=\"btnPost fun\" value=\"Playing\" name=\"Playing\" cat=\"Playing\">+</button>\r\n            <button onClick={e => onClickDetails(e)} name=\"moodModal\" type=\"button\" className=\"btnInsert work\" value=\"Eating/Drinking\" cat=\"Food\">...</button>\r\n            </div>\r\n            <div className=\"btnContainer\">\r\n            <span className=\"btnLabel\">Watching</span>\r\n            <button type=\"button\" className=\"btnPost screens\" value=\"Watching\" name=\"Socializing\" cat=\"Watching\">+</button>\r\n            <button onClick={e => onClickDetails(e)} name=\"moodModal\" type=\"button\" className=\"btnInsert screens\" value=\"Eating/Drinking\" cat=\"Food\">...</button>\r\n            </div>\r\n            <div className=\"btnContainer\">\r\n            <span className=\"btnLabel\">Reading</span>\r\n            <button type=\"button\" className=\"btnPost screens\" value=\"Reading\" name=\"Socializing\" cat=\"Reading\">+</button>\r\n            <button onClick={e => onClickDetails(e)} name=\"moodModal\" type=\"button\" className=\"btnInsert screens\" value=\"Eating/Drinking\" cat=\"Food\">...</button>\r\n            </div>\r\n            <div className=\"btnContainer btnblock\">\r\n            <span className=\"btnLabel\">Internet/Social Media</span>\r\n            <button type=\"button\" className=\"btnPost screens\" value=\"Internet-Social Media\" name=\"Internet-Social Media\" cat=\"Internet-Social Media\">+</button>\r\n            <button onClick={e => onClickDetails(e)} name=\"moodModal\" type=\"button\" className=\"btnInsert screens\" value=\"Eating/Drinking\" cat=\"Food\">...</button>\r\n            </div>\r\n            <div className=\"btnContainer\">\r\n            <span className=\"btnLabel\">Custom</span>\r\n            <button type=\"button\" className=\"btnPost\" value=\"Custom\" name=\"Custom\" cat=\"Custom\">+</button>\r\n            <button onClick={e => onClickDetails(e)} name=\"moodModal\" type=\"button\" className=\"btnInsert\" value=\"Eating/Drinking\" cat=\"Food\">...</button>\r\n\r\n            </div>\r\n        </div>\r\n        </div>\r\n\r\n       <div className=\"modalDialog\" id=\"moodModal\">\r\n       <div>\r\n                    <h1>Add Details to {title}</h1>\r\n                    <div id=\"close\" parent=\"moodModal\" onClick={e => onClickClose(e)} title=\"Close\" name=\"close\" className=\"close\">X</div>\r\n                <div>\r\n                    <form className='form' parent=\"moodModal\" onSubmit={e => onSubmit(e)}>\r\n                    <div className=\"form-group\">\r\n                          <h4>Notes</h4>\r\n                          <textarea id=\"notes\" name=\"notes\" onChange={e => onChange(e)} />\r\n\r\n                    </div>\r\n\r\n\r\n                    <input type=\"submit\" className=\"btn btn-default\" />\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            <div className=\"modalDialog\" id=\"bathroomModal\">\r\n            <div>\r\n                         <h1>What are you doing in the bathroom?</h1>\r\n                         <div id=\"close\" parent=\"bathroomModal\" onClick={e => onClickClose(e)} title=\"Close\" name=\"close\" className=\"close\">X</div>\r\n                     <div>\r\n                         <form className='form' parent=\"bathroomModal\" onSubmit={e => onSubmit(e)}>\r\n                         <div className=\"form-group\">\r\n                            <button type=\"button\" value=\"Pee\" className=\"btnModal\" name=\"title\" onClick={e => onChange(e)}>Pee</button>\r\n                            <button type=\"button\" className=\"btnModal\" name=\"title\" onClick={e => onChange(e)}>Poop</button>\r\n                            <button type=\"button\" className=\"btnModal\" name=\"title\" onClick={e => onChange(e)}>Shower</button>\r\n                            <button type=\"button\" className=\"btnModal\" name=\"title\" onClick={e => onChange(e)}>Bath</button>\r\n                            <button type=\"button\" className=\"btnModal\" name=\"title\" onClick={e => onChange(e)}>Getting Ready</button>\r\n                        </div>\r\n                        {title === \"Pee\" ? (\r\n                          <Fragment>\r\n                          <h4>Color</h4>\r\n                          <div className=\"form-group\">\r\n                            <button className=\"btnModal\" name=\"title\" onChange={e => onChange(e)}>Yellow</button>\r\n                            <button className=\"btnModal\" name=\"title\" onChange={e => onChange(e)}>Clear</button>\r\n                          </div>\r\n                          </Fragment>\r\n                        ) : (\r\n                          <Fragment>\r\n                          <p>No Pee</p>\r\n                          {title}\r\n                          </Fragment>\r\n                        )}\r\n                        <div className=\"form-group\">\r\n                            <h4>Notes</h4>\r\n                               <textarea id=\"notes\" name=\"notes\" onChange={e => onChange(e)} />\r\n                        </div>\r\n\r\n                         <input type=\"submit\" className=\"btn btn-default\" />\r\n                         </form>\r\n                     </div>\r\n                 </div>\r\n                 </div>\r\n                 </div>\r\n  )\r\n}\r\n\r\nPostForm.propTypes = {\r\n  addPost: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, { addPost })(PostForm);\r\n","C:\\Users\\afles\\CauseThis\\client\\src\\actions\\post.js",["196","197"],"import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n   GET_POSTS,\r\n   GET_POST,\r\n   POST_ERROR,\r\n   UPDATE_LIKES,\r\n   DELETE_POSTS,\r\n   ADD_POST,\r\n   ADD_COMMENT,\r\n   REMOVE_COMMENT\r\n} from './types';\r\n\r\n// Get posts\r\n\r\nexport const getPosts = () => async dispatch => {\r\n  try {\r\n    const res = await axios.get('/api/posts');\r\n    dispatch({\r\n      type: GET_POSTS,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n\r\n  }\r\n}\r\n\r\n// Add like\r\n\r\nexport const addLike = postId => async dispatch => {\r\n  try {\r\n    const res = await axios.put(`/api/posts/like/${postId}`);\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { postId, likes: res.data }\r\n    });\r\n\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n\r\n  }\r\n}\r\n\r\n// Remove like\r\n\r\nexport const removeLike = postId => async dispatch => {\r\n  try {\r\n    const res = await axios.put(`/api/posts/unlike/${postId}`);\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { postId, likes: res.data }\r\n    });\r\n\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n\r\n  }\r\n}\r\n\r\n// Delete post\r\n\r\nexport const deletePost = postId => async dispatch => {\r\n  try {\r\n    const res = await axios.delete(`/api/posts/${postId}`);\r\n    dispatch({\r\n      type: DELETE_POSTS,\r\n      payload: postId\r\n    });\r\n\r\n    dispatch(setAlert('Post Removed', 'success'));\r\n\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n\r\n  }\r\n}\r\n\r\n\r\n// Add post\r\n\r\nexport const addPost = formData => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }\r\n  try {\r\n    const res = await axios.post(`/api/posts`, formData, config);\r\n    dispatch({\r\n      type: ADD_POST,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert('Post Created', 'success'));\r\n\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n\r\n  }\r\n}\r\n\r\n// Get posts\r\n\r\nexport const getPost = id => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/posts/${id}`);\r\n\r\n    dispatch({\r\n      type: GET_POST,\r\n      payload: res.data\r\n    });\r\n    console.log(res.data)\r\n\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n\r\n  }\r\n}\r\n\r\n// Add AddComment\r\n\r\nexport const addComment = (postId, formData) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }\r\n  try {\r\n    const res = await axios.post(`/api/posts/comment/${postId}`, formData, config);\r\n    dispatch({\r\n      type: ADD_COMMENT,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert('Comment Added', 'success'));\r\n\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n\r\n  }\r\n}\r\n\r\n\r\n  // DELETE Comment\r\n\r\n  export const deleteComment = (postId, commentId) => async dispatch => {\r\n    try {\r\n      const res = await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\r\n      dispatch({\r\n        type: REMOVE_COMMENT,\r\n        payload: commentId\r\n      });\r\n\r\n      dispatch(setAlert('Comment Removed', 'success'));\r\n\r\n    } catch (err) {\r\n      dispatch({\r\n        type: POST_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status }\r\n      });\r\n\r\n    }\r\n  }\r\n","C:\\Users\\afles\\CauseThis\\client\\src\\components\\post\\Feeling.js",["198","199","200"],"import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Feeling = () => {\r\n  const [text, setText] = useState('');\r\n\r\n  return (\r\n    <div className=\"entrysection\">\r\n        <div className=\"buttonheader\"><h2>Feeling?</h2></div>\r\n        <div className=\"moodblock\">\r\n        <button type=\"button\" class=\"btn green\" value=\"Fine\" cat=\"Mood\">Fine/Content<i class=\"fas fa-smile\"></i></button>\r\n        <button type=\"button\" class=\"btn green\" value=\"Anxious\" cat=\"Mood\">Happy/Joy<i class=\"fas fa-laugh-beam\"></i></button>\r\n        <button type=\"button\" class=\"btn green\" value=\"Productive\" cat=\"Mood\">Productive<i class=\"fas fa-grin-beam-sweat\"></i></button>\r\n        <button type=\"button\" class=\"btn green\" value=\"Zone\" cat=\"Mood\">In The Zone<i class=\"fas fa-grin-beam-sweat\"></i></button>\r\n        <button type=\"button\" class=\"btn green btnblock\" value=\"Accomplished\" cat=\"Mood\">Accomplished/Proud<i class=\"fas fa-grin-wink\"></i></button>\r\n        <button type=\"button\" class=\"btn gray\" value=\"Hungry\" cat=\"Mood\">Hungry<i class=\"fas fa-grin-tongue\"></i></button>\r\n        <button type=\"button\" class=\"btn gray\" value=\"Thristy\" cat=\"Mood\">Thirsty<i class=\"fas fa-grin-tongue\"></i></button>\r\n        <button type=\"button\" class=\"btn gray\" value=\"Tired\" cat=\"Mood\">Tired<i class=\"fas fa-tired\"></i></button>\r\n        <button type=\"button\" class=\"btn gray btnblock\" value=\"Lazy\" cat=\"Mood\">Lazy/Unmotivated<i class=\"fas fa-meh\"></i></button>\r\n        <button type=\"button\" class=\"btn blue\" value=\"Sad\" cat=\"Mood\">Sad<i class=\"fas fa-frown\"></i></button>\r\n        <button type=\"button\" class=\"btn yellow\" value=\"Anxiety\" cat=\"Mood\">Anxiety/Stress<i class=\"fas fa-grimace\"></i></button>\r\n        <button type=\"button\" class=\"btn red btnblock\" value=\"Anger\" cat=\"Mood\">Anger<i class=\"fas fa-angry\"></i></button>\r\n        <button type=\"button\" class=\"btn\" value=\"Custom\" cat=\"Mood\">Custom<i class=\"fas fa-surprise purp\"></i></button>\r\n\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nFeeling.propTypes = {\r\n}\r\n\r\nexport default connect(null, {})(Feeling);\r\n",["201","202"],"C:\\Users\\afles\\CauseThis\\client\\src\\components\\configform\\create.js",["203","204","205","206","207"],"C:\\Users\\afles\\CauseThis\\client\\src\\actions\\configform.js",["208"],"import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n  GET_CONFIGFORMS,\r\n  GET_CONFIGFORM,\r\n  CONFIGFORM_ERROR,\r\n  ADD_CONFIGFORM,\r\n  DELETE_CONFIGFORM,\r\n  UPDATE_CONFIGFORM\r\n} from './types';\r\n\r\n// Add\r\n\r\nexport const addConfigForm = (formData) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }\r\n  try {\r\n    const res = await axios.post(`/api/configforms`, formData, config);\r\n    dispatch({\r\n      type: ADD_CONFIGFORM,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert('Created Item', 'success'));\r\n\r\n  } catch (err) {\r\n    dispatch({\r\n      type: CONFIGFORM_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n\r\n  }\r\n}\r\n\r\n// Update\r\n\r\nexport const updateConfigForm = (formData, id) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }\r\n  try {\r\n    const res = await axios.post(`/api/configforms/${id}`, formData, config);\r\n    dispatch({\r\n      type: UPDATE_CONFIGFORM,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert('Item Updated', 'success'));\r\n\r\n  } catch (err) {\r\n    dispatch({\r\n      type: CONFIGFORM_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n\r\n  }\r\n}\r\n\r\n// Get all items\r\n\r\nexport const getConfigForms = () => async dispatch => {\r\n  try {\r\n    const res = await axios.get('/api/configforms');\r\n    dispatch({\r\n      type: GET_CONFIGFORMS,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: CONFIGFORM_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n\r\n  }\r\n}\r\n\r\n// Get item\r\n\r\nexport const getConfigForm = id => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/configforms/${id}`);\r\n\r\n    dispatch({\r\n      type: GET_CONFIGFORM,\r\n      payload: res.data\r\n    });\r\n    console.log(res.data)\r\n\r\n  } catch (err) {\r\n    dispatch({\r\n      type: CONFIGFORM_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n// Delete post\r\n\r\nexport const deleteConfigForms = postId => async dispatch => {\r\n  try {\r\n    const res = await axios.delete(`/api/configforms/${postId}`);\r\n    dispatch({\r\n      type: DELETE_CONFIGFORM,\r\n      payload: postId\r\n    });\r\n\r\n    dispatch(setAlert('Item Removed', 'success'));\r\n\r\n  } catch (err) {\r\n    dispatch({\r\n      type: CONFIGFORM_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n\r\n  }\r\n}\r\n\r\n/*\r\n\r\n// Get posts\r\n\r\nexport const getPost = id => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/posts/${id}`);\r\n\r\n    dispatch({\r\n      type: GET_POST,\r\n      payload: res.data\r\n    });\r\n    console.log(res.data)\r\n\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n\r\n  }\r\n}\r\n\r\n// Add AddComment\r\n\r\nexport const addComment = (postId, formData) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }\r\n  try {\r\n    const res = await axios.post(`/api/posts/comment/${postId}`, formData, config);\r\n    dispatch({\r\n      type: ADD_COMMENT,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert('Comment Added', 'success'));\r\n\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n\r\n  }\r\n}\r\n\r\n\r\n  // DELETE Comment\r\n\r\n  export const deleteComment = (postId, commentId) => async dispatch => {\r\n    try {\r\n      const res = await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\r\n      dispatch({\r\n        type: REMOVE_COMMENT,\r\n        payload: commentId\r\n      });\r\n\r\n      dispatch(setAlert('Comment Removed', 'success'));\r\n\r\n    } catch (err) {\r\n      dispatch({\r\n        type: POST_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status }\r\n      });\r\n\r\n    }\r\n  }\r\n*/\r\n","C:\\Users\\afles\\CauseThis\\client\\src\\reducers\\configform.js",["209"],"import {\r\n  GET_CONFIGFORMS,\r\n  GET_CONFIGFORM,\r\n  CONFIGFORM_ERROR,\r\n  ADD_CONFIGFORM,\r\n  DELETE_CONFIGFORM,\r\n  UPDATE_CONFIGFORM\r\n\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  post: null,\r\n  loading: true,\r\n  error: {},\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch(type) {\r\n    case GET_CONFIGFORMS:\r\n      return {\r\n        ...state,\r\n        posts: payload,\r\n        loading: false\r\n      };\r\n      case GET_CONFIGFORM:\r\n        return {\r\n          ...state,\r\n          post: payload,\r\n          loading: false\r\n        };\r\n      case ADD_CONFIGFORM:\r\n       return {\r\n         ...state,\r\n         posts: [payload, ...state.posts],\r\n         loading: false\r\n       };\r\n       case UPDATE_CONFIGFORM:\r\n        return {\r\n          ...state,\r\n          posts: state.posts.filter(post => post._id !== payload),\r\n          loading: false\r\n        };\r\n      case DELETE_CONFIGFORM:\r\n        return {\r\n          ...state,\r\n          posts: state.posts.filter(post => post._id !== payload),\r\n          loading: false\r\n        };\r\n        case CONFIGFORM_ERROR:\r\n          return {\r\n            ...state,\r\n            error: payload,\r\n            loading: false\r\n          };\r\n        default:\r\n        return state;\r\n  }\r\n}\r\n","C:\\Users\\afles\\CauseThis\\client\\src\\components\\configform\\allitems.js",["210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addConfigForm, getConfigForms } from '../../actions/configform';\r\nimport { addUtil, getUtil } from '../../actions/utils';\r\nimport Create from './create';\r\nimport Category from './category';\r\n\r\n\r\nconst AllItems = ({\r\n  getUtil,\r\n  addConfigForm,\r\n  getConfigForms,\r\n  configform: { posts },\r\n  utils: { util }\r\n }) => {\r\n  useEffect(() => {\r\n    getConfigForms()\r\n  }, [posts.length]);\r\n\r\nlet catArray = [];\r\n\r\nif (util) {\r\n  catArray = util.items;\r\n} else {\r\n  catArray = [];\r\n}\r\n\r\nuseEffect(() => {\r\n  getUtil('60b0d5f564160d8684670dda');\r\n},[]);\r\n\r\n\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    parent: '',\r\n    category: 'Mood',\r\n    level: 1,\r\n    formtype: '',\r\n    formoptions: [],\r\n    locationdefault: '',\r\n    notes: '',\r\n    description: '',\r\n    weather: '',\r\n  });\r\n\r\n  const {\r\n    name,\r\n    parent,\r\n    category,\r\n    level,\r\n    formtype,\r\n    formoptions,\r\n    locationdefault,\r\n    notes,\r\n    description,\r\n    weather,\r\n  } = formData;\r\n\r\nconst onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value});\r\nconst onChangeArr = e => {\r\n  let formoptionsArr = e.target.value.split(',');\r\n  setFormData({ ...formData, formoptions: formoptionsArr});\r\n}\r\n\r\nlet itemsByCategoryArray = [];\r\n\r\nlet itemByCategory = {\r\n  categoryName: '',\r\n  itemsInCategory: [],\r\n  id: ''\r\n};\r\n\r\n const onSubmit = e => {\r\n   e.preventDefault();\r\n   console.log(formData);\r\n   addConfigForm(formData);\r\n };\r\n\r\n const levelFilter = (filter) => {\r\n   let levelFilteredArray = posts.filter(post => post.level === filter);\r\n   return levelFilteredArray;\r\n }\r\n\r\n const catFilter = (array, filter) => {\r\n   let catFilterArray = array.filter(arrayitem => arrayitem.category === filter);\r\n   return catFilterArray;\r\n }\r\n\r\nconst hasParentArray = posts.filter(post => !!post.parent);\r\n\r\ncatArray.map((cat, index) => {\r\n  const moodArray = catFilter(levelFilter(1), cat);\r\n  if (moodArray.length > 0) {\r\n  const childrenItems = moodArray.map(items => {\r\n    let checkHasParentArray = hasParentArray.filter(parentItems => parentItems.parent === items._id);\r\n    if (checkHasParentArray.length > 0) {\r\n      items.children = checkHasParentArray;\r\n      checkHasParentArray = [];\r\n    };\r\n    return items;\r\n  });\r\n\r\n  const grandKids = childrenItems.map(items => {\r\n    if (items.children.length > 0) {\r\n      items.children.map(children => {\r\n        let checkHasParentArray = hasParentArray.filter(parentItems => parentItems.parent === children._id);\r\n        if (checkHasParentArray.length > 0) {\r\n          children.children = checkHasParentArray;\r\n          checkHasParentArray = [];\r\n        }\r\n        else {\r\n          children.children = [];\r\n        }\r\n      return children;\r\n      });\r\n    }\r\n    return items;\r\n  });\r\n\r\n  const fullArray = grandKids;\r\n\r\nlet itemsRetrieved = Object.create(itemByCategory);\r\n  itemsRetrieved.categoryName = cat;\r\n  itemsRetrieved.itemsInCategory = fullArray;\r\n  itemsRetrieved.id = index;\r\n  itemsByCategoryArray.push(itemsRetrieved);\r\n}})\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n    <div>\r\n    <h1 className=\"large text-primary\">\r\n      Configure What to Track\r\n    </h1>\r\n    </div>\r\n   <div>\r\n   {itemsByCategoryArray.map((items) => (\r\n       <Category\r\n         category={items.categoryName}\r\n         items={items.itemsInCategory}\r\n         key={items.id}\r\n       />\r\n     ))\r\n}\r\n    </div>\r\n    <Fragment>\r\n    <Create\r\n      levelPass={level}\r\n      catArray={catArray}\r\n    />\r\n    </Fragment>\r\n\r\n    </Fragment>\r\n\r\n\r\n  )\r\n}\r\n\r\nAllItems.propTypes = {\r\naddConfigForm: PropTypes.func.isRequired,\r\ngetConfigForms: PropTypes.func.isRequired,\r\nconfigform: PropTypes.object.isRequired,\r\nutils: PropTypes.object.isRequired,\r\ngetUtil: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  configform: state.configform,\r\n  utils: state.utils\r\n});\r\n\r\nexport default connect(mapStateToProps, {addConfigForm,getConfigForms,getUtil})(withRouter(AllItems));\r\n","C:\\Users\\afles\\CauseThis\\client\\src\\components\\configform\\button.js",["226","227","228","229","230","231","232","233"],"import React, { Fragment, useState } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Create from './create';\r\nimport { deleteConfigForms, updateConfigForm } from '../../actions/configform';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Button = ({\r\nupdateConfigForm,\r\ndeleteConfigForms,\r\nfullArray,\r\n}) => {\r\n\r\n  let formTypes = \"\";\r\n\r\n  const [modalType, setModalType] = useState();\r\n\r\n  const [prevItemOne, setPrevItemOne] = useState();\r\n\r\n  const [prevItemTwo, setPrevItemTwo] = useState({\r\n    twoName: '',\r\n    twoParent: '',\r\n    twoLevel: '',\r\n    twoFormType: '',\r\n    twoFormOptions: ''\r\n  });\r\n\r\n  const {\r\n    twoName,\r\n    twoParent,\r\n    twoLevel,\r\n    twoFormType,\r\n    twoFormOptions\r\n  } = prevItemTwo;\r\n\r\n  const [prevItemThree, setPrevItemThree] = useState();\r\n\r\n  const [formData, setFormData] = useState({\r\n    name:fullArray.name,\r\n    parent: fullArray.parent,\r\n    level: fullArray.level,\r\n    formtype: fullArray.formtype,\r\n    formoptions: fullArray.formoptions,\r\n    locationdefault: '',\r\n    notes: '',\r\n    description: '',\r\n    weather: '',\r\n    category: 'Mood'\r\n  });\r\n\r\n  const {\r\n    name,\r\n    parent,\r\n    level,\r\n    formtype,\r\n    formoptions,\r\n    locationdefault,\r\n    notes,\r\n    description,\r\n    weather,\r\n    category\r\n  } = formData;\r\n\r\n\r\n\r\n\r\n  const setForms = e => {\r\n    if (!twoName) {\r\n      setPrevItemTwo({\r\n        twoName: e.currentTarget.getAttribute('name'),\r\n        twoParent: e.currentTarget.getAttribute('parent'),\r\n        twoLevel: level + 1,\r\n        twoFormType: e.currentTarget.getAttribute('formtype'),\r\n        twoFormOptions: e.currentTarget.getAttribute('formoptions')\r\n      });\r\n    }\r\n    else {\r\n      setPrevItemThree('Third')\r\n      }\r\n    setFormData({...formData,\r\n      name: e.currentTarget.getAttribute('name'),\r\n      level: level + 1,\r\n      parent: e.currentTarget.getAttribute('parent'),\r\n      formtype: e.currentTarget.getAttribute('formtype'),\r\n      formoptions: e.currentTarget.getAttribute('formoptions')\r\n    });\r\n  }\r\n\r\n  const onClickDetailsChild = e => {\r\n    setForms(e);\r\n    setModalType('Details');\r\n    showModel(e);\r\n  }\r\n\r\n  const onClickDefault = e => {\r\n    setModalType('Default');\r\n    showModel(e);\r\n  }\r\n\r\n  const onClickDetails = e => {\r\n    setPrevItemOne(e.currentTarget.getAttribute('name'));\r\n    setModalType('Details');\r\n    showModel(e);\r\n  }\r\n\r\n  const checkPrevious = (e) => {\r\n\r\n    if (prevItemThree) {\r\n      setPrevItemThree('');\r\n      setFormData({\r\n        name: twoName,\r\n        parent: twoParent,\r\n        level: twoLevel,\r\n        formtype: twoFormType,\r\n        formoptions: twoFormOptions\r\n      });\r\n      setPrevItemTwo({\r\n        twoName: '',\r\n        twoParent: '',\r\n        twoLevel: '',\r\n        twoFormOptions: '',\r\n        twoFormOptions: ''\r\n        });\r\n    }\r\n    else if (prevItemOne) {\r\n        setFormData({name: prevItemOne});\r\n    }\r\n  }\r\n\r\n  const onClickClose = e => {\r\n    checkPrevious(e)\r\n    let modalDivId = e.currentTarget.getAttribute('value');\r\n    let modalParentDiv = document.getElementById(modalDivId);\r\n    modalParentDiv.classList.remove(\"modalDialogshow\");\r\n  }\r\n\r\n  const showModel = e => {\r\n    let modalId = e.currentTarget.value;\r\n    let modal = document.getElementById(modalId);\r\n    modal.classList.add(\"modalDialogshow\");\r\n  }\r\n\r\n  const onSubmit = (e, id) => {\r\n    e.preventDefault();\r\n    console.log(formData);\r\n    updateConfigForm(formData, id);\r\n  };\r\n\r\n  const onChangeMain = e => {\r\n    setFormData({...formData, name: e.target.value});\r\n  }\r\n\r\n  const onChangeArr = e => {\r\n    let formoptionsArr = e.currentTarget.value.split(',');\r\n    setFormData({ ...formData, formoptions: formoptionsArr});\r\n  }\r\n\r\n  const whichType = (formEntryType, child) => {\r\n  switch(formEntryType) {\r\n    case 'button':\r\n    formTypes = formTypes + ';button';\r\n      return (\r\n      <div>\r\n      <div className='subField'>\r\n      <h3>Button</h3>\r\n        <button className=\"btnContainerSub\">\r\n        {child.name}\r\n        </button>\r\n        <div className=\"btnActionRow\">\r\n        <button onClick={e => onClickDetailsChild(e)} name={child.name} parent={child.parent} formtype={child.formtype} formoptions={child.formoptions} level={child.level} type=\"button\" className=\"subConfigEdit\" cat=\"Mood\" value={child._id}><FontAwesomeIcon icon={faEdit} size=\"lg\" title=\"Edit this item\"/></button>\r\n        <button onClick={() => deleteConfigForms(child._id)} name=\"moodModal\" type=\"button\" className=\"subConfigDelete\"><FontAwesomeIcon icon={faTimes} size=\"lg\"/></button>\r\n        </div>\r\n        </div>\r\n\r\n        <div className=\"modalDialog\" id={child._id}>\r\n        <div>\r\n        <form className='form' onSubmit={e => onSubmit(e, child._id)}>\r\n        <div className=\"form-group\">\r\n        <h1>Button Name and Value</h1>\r\n          <input type=\"text\" className=\"from-control text\" name=\"name\" value={name} onChange={e => onChangeMain(e)} />\r\n          <input type='submit' className='btn btn-primary my-1' value=\"Submit Change\" />\r\n        </div>\r\n        </form>\r\n                     <div onClick={e => onClickClose(e)} title=\"Close\" value={child._id} className=\"close\">X</div>\r\n                 <div>\r\n                    {modalType === 'Default' ? (\r\n                      <Fragment>\r\n                      <h2>Default</h2>\r\n                      </Fragment>\r\n                    ):(\r\n                      <Fragment>\r\n                      { child.children.length > 0 ? (\r\n                        <div>\r\n                        { child.children.map((child) => (\r\n                          <div key={child._id}>\r\n                          {whichType(child.formtype, child)}\r\n                          </div>\r\n                        ))}\r\n                        </div>\r\n                      ) : (\r\n                        <div>\r\n                        </div>\r\n                      )}\r\n                      { child.level + 1 < 4 ? (\r\n                        <Create\r\n                          formTypes = {formTypes}\r\n                          parentId = {child._id}\r\n                          levelPass = {child.level + 1}\r\n                        />\r\n                      ) : (\r\n                        <p>No more levels</p>\r\n                      )}\r\n\r\n                      </Fragment>\r\n                    )}\r\n                 </div>\r\n             </div></div>\r\n             </div>\r\n        )\r\n    case 'text':\r\n    formTypes = formTypes + ';text';\r\n      return (\r\n        <div>\r\n        <div className='subField'>\r\n        <h3>Text Box</h3>\r\n        <label className=\"configLabel\" htmlFor={child.name}>{child.name}</label>\r\n        <input type=\"text\" name={child.name}></input>\r\n        <div className=\"btnActionRow\">\r\n                          <button onClick={e => onClickDetailsChild(e)} name={child.name} parent={child.parent} formtype={child.formtype} formoptions={child.formoptions} level={child.level} type=\"button\" className=\"subConfigEdit\" cat=\"Mood\" value={child._id}><FontAwesomeIcon icon={faEdit} size=\"lg\" title=\"Edit this item\"/></button>\r\n                          <button id=\"delete\" onClick={() => deleteConfigForms(child._id)} name=\"moodModal\" type=\"button\" className=\"subConfigDelete\"><FontAwesomeIcon icon={faTimes} size=\"lg\"/></button>\r\n        </div>\r\n        </div>\r\n                          <div className=\"modalDialog\" id={child._id}>\r\n                          <div>\r\n                          <form className='form' onSubmit={e => onSubmit(e, child._id)}>\r\n                          <div className=\"form-group\">          <h1>Name and Value</h1>\r\n                            <input type=\"text\" className=\"from-control text\" name=\"name\" value={name} onChange={e => onChangeMain(e)} />\r\n                            <input type='submit' className='btn btn-primary my-1' value=\"Submit Change\" />\r\n                          </div>\r\n                          </form>\r\n                          <div parent=\"moodModal\" onClick={e => onClickClose(e)} title=\"Close\" value={child._id} className=\"close\">X</div>\r\n                          </div>\r\n        </div>\r\n        </div>\r\n      )\r\n    case 'multiplelines':\r\n    formTypes = formTypes + ';multiplelines';\r\n\r\n      return (\r\n        <div>\r\n        <div className='subField'>\r\n        <h3>Multiple Lines of Text</h3>\r\n        <label className=\"configLabel\" htmlFor={child.name}>{child.name}</label>\r\n        <textarea name={child.name} rows=\"4\" cols=\"50\">\r\n        </textarea>\r\n        <div className=\"btnActionRow\">\r\n        <button onClick={e => onClickDetailsChild(e)} name={child.name} parent={child.parent} formtype={child.formtype} formoptions={child.formoptions} level={child.level} type=\"button\" className=\"subConfigEdit\" cat=\"Mood\" value={child._id}><FontAwesomeIcon icon={faEdit} size=\"lg\" title=\"Edit this item\"/></button>\r\n            <button onClick={() => deleteConfigForms(child._id)}  name=\"moodModal\" type=\"button\" className=\"subConfigDelete\"><FontAwesomeIcon icon={faTimes} size=\"lg\"/></button>\r\n</div>\r\n</div>\r\n        <div className=\"modalDialog\" id={child._id}>\r\n        <div>\r\n        <form className='form' onSubmit={e => onSubmit(e, child._id)}>\r\n        <div className=\"form-group\">\r\n        <h1>Name and Value</h1>\r\n          <input type=\"text\" className=\"from-control text\" name=\"name\" value={name} onChange={e => onChangeMain(e)} />\r\n          <input type='submit' className='btn btn-primary my-1' value=\"Submit Change\" />\r\n        </div>\r\n        </form>\r\n        <div parent=\"moodModal\" onClick={e => onClickClose(e)} title=\"Close\" value={child._id} className=\"close\">X</div>\r\n        </div>\r\n</div>\r\n</div>\r\n      )\r\n\r\n    case 'dropdown':\r\n    formTypes = formTypes + ';dropdown';\r\n      return (\r\n        <div>\r\n        <div className='subField'>\r\n        <h3>Drop Down List</h3>\r\n        <label className=\"configLabel\" htmlFor={child._id}>{child.name}</label>\r\n\r\n<select name={child.name}>\r\n{ child.formoptions.map((options) => (\r\n  <option key={options} id={options} value={options}>{options}</option>\r\n))}\r\n</select>\r\n<div className=\"btnActionRow\">\r\n<button onClick={e => onClickDetailsChild(e)} name={child.name} parent={child.parent} formtype={child.formtype} formoptions={child.formoptions} level={child.level} type=\"button\" className=\"subConfigEdit\" cat=\"Mood\" value={child._id}><FontAwesomeIcon icon={faEdit} size=\"lg\" title=\"Edit this item\"/></button>\r\n          <button onClick={() => deleteConfigForms(child._id)} name=\"moodModal\" type=\"button\" className=\"subConfigDelete\"><FontAwesomeIcon icon={faTimes} size=\"lg\"/></button>\r\n</div>\r\n</div>\r\n        <div className=\"modalDialog\" id={child._id}>\r\n        <div>\r\n        <form className='form' onSubmit={e => onSubmit(e, child._id)}>\r\n        <div className=\"form-group\">\r\n        <h1>Name and Value Drop Down</h1>\r\n          <input type=\"text\" className=\"from-control text\" name=\"name\" value={name} onChange={e => onChangeMain(e)} />\r\n          <h3>What are the options for your {child.formtype}?</h3>\r\n         <textarea name=\"formoptions\" rows=\"4\" cols=\"50\" value={child.formoptions} onChange={e => onChangeArr(e)}>\r\n         </textarea>\r\n          <input type='submit' className='btn btn-primary my-1' value=\"Submit Change\" />\r\n        </div>\r\n        </form>\r\n        <div parent=\"moodModal\" onClick={e => onClickClose(e)} title=\"Close\" value={child._id} className=\"close\">X</div>\r\n        </div>\r\n</div>\r\n</div>\r\n      )\r\n\r\n    case 'combo':\r\n    formTypes = formTypes + ';combo';\r\n    return (\r\n      <div>\r\n      <div className='subField'>\r\n      <h3>Drop Down Multiple Select</h3>\r\n      <label className=\"configLabel\" htmlFor={child._id}>{child.name}</label>\r\n<select name={child.name} multiple>\r\n{ child.formoptions.map((options) => (\r\n<option key={options} value={options}>{options}</option>\r\n))}\r\n</select>\r\n<div className=\"btnActionRow\">\r\n\r\n<button onClick={e => onClickDetailsChild(e)} name={child.name} parent={child.parent} formtype={child.formtype} formoptions={child.formoptions} level={child.level} type=\"button\" className=\"subConfigEdit\" cat=\"Mood\" value={child._id}><FontAwesomeIcon icon={faEdit} size=\"lg\" title=\"Edit this item\"/></button>\r\n          <button onClick={() => deleteConfigForms(child._id)} name={child.name} type=\"button\" className=\"subConfigDelete\"><FontAwesomeIcon icon={faTimes} size=\"lg\"/></button>\r\n</div>\r\n</div>\r\n        <div className=\"modalDialog\" id={child._id}>\r\n        <div>\r\n        <form className='form' onSubmit={e => onSubmit(e, child._id)}>\r\n        <div className=\"form-group\">\r\n        <h1>Name and Value</h1>\r\n          <input type=\"text\" className=\"from-control text\" name=\"name\" value={name} onChange={e => onChangeMain(e)} />\r\n          <h3>What are the options for your {child.formtype}?</h3>\r\n         <textarea name=\"formoptions\" rows=\"4\" cols=\"50\" value={child.formoptions} onChange={e => onChangeArr(e)}>\r\n         </textarea>\r\n          <input type='submit' className='btn btn-primary my-1' value=\"Submit Change\" />\r\n        </div>\r\n        </form>\r\n        <div parent=\"moodModal\" onClick={e => onClickClose(e)} title=\"Close\" value={child._id} className=\"close\">X</div>\r\n        </div>\r\n</div>\r\n</div>\r\n    )\r\n    default:\r\n      return (\r\n<div>\r\n        <p>This is the default</p>\r\n</div>\r\n              )\r\n  }};\r\n\r\nreturn (\r\n<div>\r\n  <div className=\"btnContainer\">\r\n  <span className=\"btnLabel\">{name}</span>\r\n  <button onClick={e => onClickDetails(e)} name={name} parent={parent} formtype={formtype} formoptions={formoptions} type=\"button\" className=\"btnConfigEdit\" cat=\"Mood\" value={fullArray._id}><FontAwesomeIcon icon={faEdit} size=\"lg\" title=\"Edit this item\"/>\r\n</button>\r\n    <button onClick={() => deleteConfigForms(fullArray._id)} name=\"moodModal\" type=\"button\" className=\"btnConfigDelete\"><FontAwesomeIcon icon={faTimes} size=\"lg\"/></button>\r\n  </div>\r\n\r\n    <div className=\"modalDialog\" id={fullArray._id}>\r\n    <div>\r\n    <form className='form' onSubmit={e => onSubmit(e, fullArray._id)}>\r\n    <div className=\"form-group\">\r\n    <h1>Button Name and Value</h1>\r\n      <input type=\"text\" className=\"from-control text\" name=\"name\" value={name} onChange={e => onChangeMain(e)} />\r\n      <input type='submit' className='btn btn-primary my-1' value=\"Submit Change\" />\r\n    </div>\r\n    </form>\r\n\r\n\r\n                 <div id=\"close\" parent=\"moodModal\" onClick={e => onClickClose(e)} title=\"Close\" value={fullArray._id} className=\"close\">X</div>\r\n             <div>\r\n                {modalType === 'Default' ? (\r\n                  <Fragment>\r\n                  <h2>Default</h2>\r\n                  </Fragment>\r\n                ):(\r\n                  <Fragment>\r\n                  { fullArray.children.length < 1 ? (\r\n                      <p>No Children Here.</p>\r\n                  ) : (\r\n                    <div className=\"configSubOptions\">\r\n                    <h2>Sub entry options for {fullArray.name}</h2>\r\n                    { fullArray.children.map((child) => (\r\n                      <div key={child._id}>\r\n                      {whichType(child.formtype, child)}\r\n                      </div>\r\n                    ))}\r\n                    </div>\r\n                  )}\r\n                  <Create\r\n                    parentId = {fullArray._id}\r\n                    formTypes = {formTypes}\r\n                    levelPass = {fullArray.level + 1}\r\n                    parentName = {fullArray.name}\r\n                    instruction = \"Create a sub entry for \"\r\n                  />\r\n                  </Fragment>\r\n                )}\r\n             </div>\r\n         </div></div>\r\n    </div>\r\n);\r\n}\r\n\r\nButton.propTypes = {\r\n  fullArray: PropTypes.object.isRequired,\r\n  deleteConfigForms: PropTypes.func.isRequired,\r\n  updateConfigForm: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  children: state.children\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, {deleteConfigForms, updateConfigForm})(withRouter(Button))\r\n","C:\\Users\\afles\\CauseThis\\client\\src\\components\\configform\\category.js",[],"C:\\Users\\afles\\CauseThis\\client\\src\\actions\\utils.js",["234","235"],"import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n  GET_UTILS,\r\n  GET_UTIL,\r\n  UTIL_ERROR,\r\n  ADD_UTIL,\r\n  DELETE_UTIL,\r\n  UPDATE_UTIL\r\n} from './types';\r\n\r\n// Add\r\n\r\nexport const addUtil = (formData) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }\r\n  try {\r\n    const res = await axios.post(`/api/utils`, formData, config);\r\n    dispatch({\r\n      type: ADD_UTIL,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert('Created Item', 'success'));\r\n\r\n  } catch (err) {\r\n    dispatch({\r\n      type: UTIL_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n\r\n  }\r\n}\r\n\r\n// Update\r\n\r\nexport const updateUtil = (items, id) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }\r\n  try {\r\n    const res = await axios.put(`/api/utils/${id}`, items);\r\n    dispatch({\r\n      type: UPDATE_UTIL,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert('Item Updated', 'success'));\r\n\r\n  } catch (err) {\r\n    dispatch({\r\n      type: UTIL_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n\r\n  }\r\n}\r\n\r\n// Get all items\r\n\r\nexport const getUtils = () => async dispatch => {\r\n  try {\r\n    const res = await axios.get('/api/utils');\r\n    dispatch({\r\n      type: GET_UTILS,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: UTIL_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n\r\n  }\r\n}\r\n\r\n// Get item\r\n\r\nexport const getUtil = id => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/utils/${id}`);\r\n\r\n    dispatch({\r\n      type: GET_UTIL,\r\n      payload: res.data\r\n    });\r\n    console.log(res.data)\r\n\r\n  } catch (err) {\r\n    dispatch({\r\n      type: UTIL_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n// Delete post\r\n\r\nexport const deleteUtil = postId => async dispatch => {\r\n  try {\r\n    const res = await axios.delete(`/api/utils/${postId}`);\r\n    dispatch({\r\n      type: DELETE_UTIL,\r\n      payload: postId\r\n    });\r\n\r\n    dispatch(setAlert('Item Removed', 'success'));\r\n\r\n  } catch (err) {\r\n    dispatch({\r\n      type: UTIL_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n\r\n  }\r\n}\r\n","C:\\Users\\afles\\CauseThis\\client\\src\\reducers\\utils.js",["236"],"import {\r\n  GET_UTILS,\r\n  GET_UTIL,\r\n  UTIL_ERROR,\r\n  ADD_UTIL,\r\n  DELETE_UTIL,\r\n  UPDATE_UTIL\r\n\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  utils: [],\r\n  util: null,\r\n  loading: true,\r\n  error: {},\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch(type) {\r\n    case GET_UTILS:\r\n      return {\r\n        ...state,\r\n        utils: payload,\r\n        loading: false\r\n      };\r\n      case GET_UTIL:\r\n        return {\r\n          ...state,\r\n          util: payload,\r\n          loading: false\r\n        };\r\n      case ADD_UTIL:\r\n       return {\r\n         ...state,\r\n         util: [payload, ...state.util],\r\n         loading: false\r\n       };\r\n       case UPDATE_UTIL:\r\n        return {\r\n          ...state,\r\n          util: payload,\r\n          loading: false\r\n        };\r\n      case DELETE_UTIL:\r\n        return {\r\n          ...state,\r\n          utils: state.utils.filter(util => util._id !== payload),\r\n          loading: false\r\n        };\r\n        case UTIL_ERROR:\r\n          return {\r\n            ...state,\r\n            error: payload,\r\n            loading: false\r\n          };\r\n        default:\r\n        return state;\r\n  }\r\n}\r\n",{"ruleId":"237","replacedBy":"238"},{"ruleId":"239","replacedBy":"240"},{"ruleId":"241","severity":1,"message":"242","line":1,"column":27,"nodeType":"243","messageId":"244","endLine":1,"endColumn":36},{"ruleId":"241","severity":1,"message":"245","line":7,"column":3,"nodeType":"243","messageId":"244","endLine":7,"endColumn":17},{"ruleId":"241","severity":1,"message":"246","line":83,"column":13,"nodeType":"243","messageId":"244","endLine":83,"endColumn":16},{"ruleId":"247","severity":1,"message":"248","line":14,"column":6,"nodeType":"249","endLine":14,"endColumn":8,"suggestions":"250"},{"ruleId":"251","severity":1,"message":"252","line":5,"column":1,"nodeType":"253","endLine":15,"endColumn":2},{"ruleId":"254","severity":1,"message":"255","line":7,"column":16,"nodeType":"256","messageId":"257","endLine":7,"endColumn":17},{"ruleId":"251","severity":1,"message":"252","line":18,"column":1,"nodeType":"253","endLine":51,"endColumn":2},{"ruleId":"251","severity":1,"message":"252","line":16,"column":1,"nodeType":"253","endLine":44,"endColumn":2},{"ruleId":"241","severity":1,"message":"258","line":29,"column":5,"nodeType":"243","messageId":"244","endLine":29,"endColumn":11},{"ruleId":"247","severity":1,"message":"259","line":45,"column":6,"nodeType":"249","endLine":45,"endColumn":34,"suggestions":"260"},{"ruleId":"241","severity":1,"message":"258","line":53,"column":5,"nodeType":"243","messageId":"244","endLine":53,"endColumn":11},{"ruleId":"251","severity":1,"message":"261","line":4,"column":1,"nodeType":"253","endLine":12,"endColumn":3},{"ruleId":"241","severity":1,"message":"262","line":21,"column":5,"nodeType":"243","messageId":"244","endLine":21,"endColumn":13},{"ruleId":"241","severity":1,"message":"263","line":22,"column":5,"nodeType":"243","messageId":"244","endLine":22,"endColumn":9},{"ruleId":"241","severity":1,"message":"264","line":23,"column":5,"nodeType":"243","messageId":"244","endLine":23,"endColumn":13},{"ruleId":"241","severity":1,"message":"265","line":24,"column":5,"nodeType":"243","messageId":"244","endLine":24,"endColumn":13},{"ruleId":"241","severity":1,"message":"266","line":25,"column":5,"nodeType":"243","messageId":"244","endLine":25,"endColumn":10},{"ruleId":"241","severity":1,"message":"267","line":26,"column":5,"nodeType":"243","messageId":"244","endLine":26,"endColumn":16},{"ruleId":"241","severity":1,"message":"268","line":27,"column":5,"nodeType":"243","messageId":"244","endLine":27,"endColumn":12},{"ruleId":"269","severity":1,"message":"270","line":118,"column":43,"nodeType":"271","endLine":118,"endColumn":57},{"ruleId":"241","severity":1,"message":"246","line":74,"column":11,"nodeType":"243","messageId":"244","endLine":74,"endColumn":14},{"ruleId":"241","severity":1,"message":"246","line":170,"column":13,"nodeType":"243","messageId":"244","endLine":170,"endColumn":16},{"ruleId":"241","severity":1,"message":"272","line":2,"column":8,"nodeType":"243","messageId":"244","endLine":2,"endColumn":17},{"ruleId":"241","severity":1,"message":"273","line":6,"column":10,"nodeType":"243","messageId":"244","endLine":6,"endColumn":14},{"ruleId":"241","severity":1,"message":"274","line":6,"column":16,"nodeType":"243","messageId":"244","endLine":6,"endColumn":23},{"ruleId":"237","replacedBy":"275"},{"ruleId":"239","replacedBy":"276"},{"ruleId":"241","severity":1,"message":"277","line":45,"column":5,"nodeType":"243","messageId":"244","endLine":45,"endColumn":10},{"ruleId":"241","severity":1,"message":"278","line":48,"column":5,"nodeType":"243","messageId":"244","endLine":48,"endColumn":20},{"ruleId":"241","severity":1,"message":"266","line":49,"column":5,"nodeType":"243","messageId":"244","endLine":49,"endColumn":10},{"ruleId":"241","severity":1,"message":"267","line":50,"column":5,"nodeType":"243","messageId":"244","endLine":50,"endColumn":16},{"ruleId":"241","severity":1,"message":"268","line":51,"column":5,"nodeType":"243","messageId":"244","endLine":51,"endColumn":12},{"ruleId":"241","severity":1,"message":"246","line":110,"column":11,"nodeType":"243","messageId":"244","endLine":110,"endColumn":14},{"ruleId":"251","severity":1,"message":"252","line":18,"column":1,"nodeType":"253","endLine":60,"endColumn":2},{"ruleId":"241","severity":1,"message":"279","line":6,"column":10,"nodeType":"243","messageId":"244","endLine":6,"endColumn":17},{"ruleId":"247","severity":1,"message":"280","line":20,"column":6,"nodeType":"249","endLine":20,"endColumn":20,"suggestions":"281"},{"ruleId":"247","severity":1,"message":"282","line":32,"column":3,"nodeType":"249","endLine":32,"endColumn":5,"suggestions":"283"},{"ruleId":"241","severity":1,"message":"284","line":49,"column":5,"nodeType":"243","messageId":"244","endLine":49,"endColumn":9},{"ruleId":"241","severity":1,"message":"285","line":50,"column":5,"nodeType":"243","messageId":"244","endLine":50,"endColumn":11},{"ruleId":"241","severity":1,"message":"262","line":51,"column":5,"nodeType":"243","messageId":"244","endLine":51,"endColumn":13},{"ruleId":"241","severity":1,"message":"286","line":53,"column":5,"nodeType":"243","messageId":"244","endLine":53,"endColumn":13},{"ruleId":"241","severity":1,"message":"287","line":54,"column":5,"nodeType":"243","messageId":"244","endLine":54,"endColumn":16},{"ruleId":"241","severity":1,"message":"278","line":55,"column":5,"nodeType":"243","messageId":"244","endLine":55,"endColumn":20},{"ruleId":"241","severity":1,"message":"266","line":56,"column":5,"nodeType":"243","messageId":"244","endLine":56,"endColumn":10},{"ruleId":"241","severity":1,"message":"267","line":57,"column":5,"nodeType":"243","messageId":"244","endLine":57,"endColumn":16},{"ruleId":"241","severity":1,"message":"268","line":58,"column":5,"nodeType":"243","messageId":"244","endLine":58,"endColumn":12},{"ruleId":"241","severity":1,"message":"288","line":61,"column":7,"nodeType":"243","messageId":"244","endLine":61,"endColumn":15},{"ruleId":"241","severity":1,"message":"289","line":62,"column":7,"nodeType":"243","messageId":"244","endLine":62,"endColumn":18},{"ruleId":"241","severity":1,"message":"290","line":75,"column":8,"nodeType":"243","messageId":"244","endLine":75,"endColumn":16},{"ruleId":"291","severity":1,"message":"292","line":93,"column":27,"nodeType":"293","messageId":"294","endLine":93,"endColumn":29},{"ruleId":"241","severity":1,"message":"295","line":2,"column":10,"nodeType":"243","messageId":"244","endLine":2,"endColumn":14},{"ruleId":"241","severity":1,"message":"278","line":60,"column":5,"nodeType":"243","messageId":"244","endLine":60,"endColumn":20},{"ruleId":"241","severity":1,"message":"266","line":61,"column":5,"nodeType":"243","messageId":"244","endLine":61,"endColumn":10},{"ruleId":"241","severity":1,"message":"267","line":62,"column":5,"nodeType":"243","messageId":"244","endLine":62,"endColumn":16},{"ruleId":"241","severity":1,"message":"268","line":63,"column":5,"nodeType":"243","messageId":"244","endLine":63,"endColumn":12},{"ruleId":"241","severity":1,"message":"262","line":64,"column":5,"nodeType":"243","messageId":"244","endLine":64,"endColumn":13},{"ruleId":"241","severity":1,"message":"296","line":98,"column":9,"nodeType":"243","messageId":"244","endLine":98,"endColumn":23},{"ruleId":"297","severity":1,"message":"298","line":125,"column":9,"nodeType":"299","messageId":"300","endLine":125,"endColumn":23},{"ruleId":"241","severity":1,"message":"301","line":41,"column":9,"nodeType":"243","messageId":"244","endLine":41,"endColumn":15},{"ruleId":"241","severity":1,"message":"246","line":110,"column":11,"nodeType":"243","messageId":"244","endLine":110,"endColumn":14},{"ruleId":"251","severity":1,"message":"252","line":18,"column":1,"nodeType":"253","endLine":60,"endColumn":2},"no-native-reassign",["302"],"no-negated-in-lhs",["303"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'UPDATE_PROFILE' is defined but never used.","'res' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCurrentProfile'. Either include it or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["304"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'height' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'isUnitedStates', 'profile.area', 'profile.birth', 'profile.city', 'profile.country', 'profile.ethnicityandrace', 'profile.gender', 'profile.height', 'profile.industry', 'profile.jobtitle', 'profile.weight', and 'profile.zip'. Either include them or remove the dependency array. If 'setFormData' needs the current value of 'profile.birth', you can also switch to useReducer instead of useState and read 'profile.birth' in the reducer.",["305"],"Assign arrow function to a variable before exporting as module default","'category' is assigned a value but never used.","'date' is assigned a value but never used.","'duration' is assigned a value but never used.","'location' is assigned a value but never used.","'notes' is assigned a value but never used.","'description' is assigned a value but never used.","'weather' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'PropTypes' is defined but never used.","'text' is assigned a value but never used.","'setText' is assigned a value but never used.",["302"],["303"],"'level' is assigned a value but never used.","'locationdefault' is assigned a value but never used.","'addUtil' is defined but never used.","React Hook useEffect has a missing dependency: 'getConfigForms'. Either include it or remove the dependency array. If 'getConfigForms' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["306"],"React Hook useEffect has a missing dependency: 'getUtil'. Either include it or remove the dependency array. If 'getUtil' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["307"],"'name' is assigned a value but never used.","'parent' is assigned a value but never used.","'formtype' is assigned a value but never used.","'formoptions' is assigned a value but never used.","'onChange' is assigned a value but never used.","'onChangeArr' is assigned a value but never used.","'onSubmit' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Link' is defined but never used.","'onClickDefault' is assigned a value but never used.","no-dupe-keys","Duplicate key 'twoFormOptions'.","ObjectExpression","unexpected","'config' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"308","fix":"309"},{"desc":"310","fix":"311"},{"desc":"312","fix":"313"},{"desc":"314","fix":"315"},"Update the dependencies array to be: [getCurrentProfile]",{"range":"316","text":"317"},"Update the dependencies array to be: [loading, getCurrentProfile, profile.birth, profile.country, profile.city, profile.zip, profile.gender, profile.height, profile.weight, profile.ethnicityandrace, profile.industry, profile.area, profile.jobtitle, isUnitedStates]",{"range":"318","text":"319"},"Update the dependencies array to be: [getConfigForms, posts.length]",{"range":"320","text":"321"},"Update the dependencies array to be: [getUtil]",{"range":"322","text":"323"},[582,584],"[getCurrentProfile]",[1564,1592],"[loading, getCurrentProfile, profile.birth, profile.country, profile.city, profile.zip, profile.gender, profile.height, profile.weight, profile.ethnicityandrace, profile.industry, profile.area, profile.jobtitle, isUnitedStates]",[565,579],"[getConfigForms, posts.length]",[740,742],"[getUtil]"]